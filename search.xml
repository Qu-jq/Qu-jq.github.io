<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>第四章 操作数据表中的记录</title>
    <url>/2019/12/15/%E7%AC%AC%E5%9B%9B%E7%AB%A0%E6%93%8D%E4%BD%9C%E6%95%B0%E6%8D%AE%E8%A1%A8%E4%B8%AD%E7%9A%84%E8%AE%B0%E5%BD%95/</url>
    <content><![CDATA[<p>这一章主要是记录的操作，之前已经学过记录的插入、查找、删除，下面进行更加详细的讲解。</p>
<a id="more"></a> 
<h1 id="1-插入记录"><a href="#1-插入记录" class="headerlink" title="1. 插入记录"></a>1. 插入记录</h1><h2 id="1）第一种方法"><a href="#1）第一种方法" class="headerlink" title="1）第一种方法"></a>1）第一种方法</h2><p><strong>INSERT [INTO] tbl_name [(col_name,…)] {VALUES|VALUE} ({expr | DEFAULT},…),(…),…</strong><br>打开mysql服务器，连接客户端，使用test数据库：</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">C:\Windows\system32&gt;net start mysql</span><br><span class="line"></span><br><span class="line">C:\Windows\system32&gt;mysql -uroot -p</span><br><span class="line">Enter password: ****</span><br><span class="line"></span><br><span class="line">mysql&gt; USE test;</span><br></pre></td></tr></table></figure>
<p>为节省空间这里只给出指令，没有运行结果。<br>下面来看一个test数据库里面都有哪些数据表啦，当然你的可以和我不太一样。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; SHOW TABLES;</span><br><span class="line">+<span class="comment">----------------+</span></span><br><span class="line">| Tables_in_test |</span><br><span class="line">+<span class="comment">----------------+</span></span><br><span class="line">| provinces      |</span><br><span class="line">| tb1            |</span><br><span class="line">| tb2            |</span><br><span class="line">| tb3            |</span><br><span class="line">| tb4            |</span><br><span class="line">| tb5            |</span><br><span class="line">| tb6            |</span><br><span class="line">| users          |</span><br><span class="line">| users1         |</span><br><span class="line">| users2         |</span><br><span class="line">+<span class="comment">----------------+</span></span><br><span class="line">10 rows in <span class="keyword">set</span> (<span class="number">0.04</span> sec)</span><br></pre></td></tr></table></figure>

<p>可以看到上一个章节创建的数据表都还在。<br>如果存在users数据表的话，先把它删除，待会重新创建一下：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; DROP TABLE users;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br></pre></td></tr></table></figure>
<p>重新创建users数据表：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; CREATE TABLE users(</span><br><span class="line">    -&gt; id SMALLINT UNSIGNED PRIMARY KEY AUTO_INCREMENT,</span><br><span class="line">    -&gt; username VARCHAR(20) NOT NULL,</span><br><span class="line">    -&gt; password VARCHAR(32) NOT NULL,</span><br><span class="line">    -&gt; age TINYINT UNSIGNED NOT NULL DEFAULT 10,</span><br><span class="line">    -&gt; sex BOOLEAN</span><br><span class="line">    -&gt; );</span><br><span class="line">Query OK, 0 rows affected (0.04 sec)</span><br></pre></td></tr></table></figure>

<p>在这就省略查看是否真正创建成功啦，自行查看。<br>接下来我们往表里插入几条记录：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; INSERT users VALUES(NULL,'hua','123',18,true);</span><br><span class="line">Query OK, 1 row affected (0.03 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; SELECT * FROM users;</span><br><span class="line">+<span class="comment">----+----------+----------+-----+------+</span></span><br><span class="line">| id | username | password | age | sex  |</span><br><span class="line">+<span class="comment">----+----------+----------+-----+------+</span></span><br><span class="line">|  1 | hua      | 123      |  18 |    1 |</span><br><span class="line">+<span class="comment">----+----------+----------+-----+------+</span></span><br><span class="line">1 row in <span class="keyword">set</span> (<span class="number">0.03</span> sec)</span><br></pre></td></tr></table></figure>
<p>我们对id这个自增量赋值为NULL，其值为1。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; INSERT users VALUES(NULL,'hao','123',18,true);</span><br><span class="line">Query OK, 1 row affected (0.03 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; SELECT * FROM users;</span><br><span class="line">+<span class="comment">----+----------+----------+-----+------+</span></span><br><span class="line">| id | username | password | age | sex  |</span><br><span class="line">+<span class="comment">----+----------+----------+-----+------+</span></span><br><span class="line">|  1 | hua      | 123      |  18 |    1 |</span><br><span class="line">|  2 | hao      | 123      |  18 |    1 |</span><br><span class="line">+<span class="comment">----+----------+----------+-----+------+</span></span><br><span class="line">2 rows in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure>

<p>还有一种方式：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; INSERT users VALUES(DEFAULT,'yue','123',18,true);</span><br><span class="line">Query OK, 1 row affected (0.03 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; SELECT * FROM users;</span><br><span class="line">+<span class="comment">----+----------+----------+-----+------+</span></span><br><span class="line">| id | username | password | age | sex  |</span><br><span class="line">+<span class="comment">----+----------+----------+-----+------+</span></span><br><span class="line">|  1 | hua      | 123      |  18 |    1 |</span><br><span class="line">|  2 | hao      | 123      |  18 |    1 |</span><br><span class="line">|  3 | yue      | 123      |  18 |    1 |</span><br><span class="line">+<span class="comment">----+----------+----------+-----+------+</span></span><br><span class="line">3 rows in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure>
<p>以上说明：如果想对自动递增的字段赋值，可以输入NULL或者DEFAULT.<br>另外上面三个记录我们都对每个字段进行了赋值，如果缺少则会出现错误：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; INSERT users VALUES(NULL,'chun','123',18);</span><br><span class="line">ERROR 1136 (21S01): Column count doesn't match value count at row 1</span><br></pre></td></tr></table></figure>
<p>说明如果省略列名的话，所有的列必须依次赋值。<br>除了可以书写确切的数字以外，还可以书写表达式：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; INSERT users VALUES(DEFAULT,'yuan','123',20*2-20,true);</span><br><span class="line">Query OK, 1 row affected (0.03 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; SELECT * FROM users;</span><br><span class="line">+<span class="comment">----+----------+----------+-----+------+</span></span><br><span class="line">| id | username | password | age | sex  |</span><br><span class="line">+<span class="comment">----+----------+----------+-----+------+</span></span><br><span class="line">|  1 | hua      | 123      |  18 |    1 |</span><br><span class="line">|  2 | hao      | 123      |  18 |    1 |</span><br><span class="line">|  3 | yue      | 123      |  18 |    1 |</span><br><span class="line">|  4 | yuan     | 123      |  20 |    1 |</span><br><span class="line">+<span class="comment">----+----------+----------+-----+------+</span></span><br><span class="line">4 rows in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure>
<p>说明对整型字段赋值，可以使用数学表达式。当然也可以是字符表达式，或者某个函数。<br>再来看下DEFAULT，除了可以对自动赋值的字段赋值，还可以对设置了默认约束的字段赋值：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; INSERT users VALUES(DEFAULT,'yue','123',DEFAULT,true);</span><br><span class="line">Query OK, 1 row affected (0.03 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; SELECT * FROM users;</span><br><span class="line">+<span class="comment">----+----------+----------+-----+------+</span></span><br><span class="line">| id | username | password | age | sex  |</span><br><span class="line">+<span class="comment">----+----------+----------+-----+------+</span></span><br><span class="line">|  1 | hua      | 123      |  18 |    1 |</span><br><span class="line">|  2 | hao      | 123      |  18 |    1 |</span><br><span class="line">|  3 | yue      | 123      |  18 |    1 |</span><br><span class="line">|  4 | yuan     | 123      |  20 |    1 |</span><br><span class="line">|  5 | yue      | 123      |  10 |    1 |</span><br><span class="line">+<span class="comment">----+----------+----------+-----+------+</span></span><br><span class="line">5 rows in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure>

<p>第五条记录的age被赋值为默认值10。<br>以上都是插入一条记录，下面如何一次性插入多条记录呢？</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; INSERT users VALUES(DEFAULT,'ye','123',20*2-20,true),(DEFAULT,'chun',md5(123),DEFAULT,0);</span><br><span class="line">Query OK, 2 rows affected (0.03 sec)</span><br><span class="line">Records: 2  Duplicates: 0  Warnings: 0</span><br><span class="line"></span><br><span class="line">mysql&gt; SELECT * FROM users;</span><br><span class="line">+<span class="comment">----+----------+----------------------------------+-----+------+</span></span><br><span class="line">| id | username | password                         | age | sex  |</span><br><span class="line">+<span class="comment">----+----------+----------------------------------+-----+------+</span></span><br><span class="line">|  1 | hua      | 123                              |  18 |    1 |</span><br><span class="line">|  2 | hao      | 123                              |  18 |    1 |</span><br><span class="line">|  3 | yue      | 123                              |  18 |    1 |</span><br><span class="line">|  4 | yuan     | 123                              |  20 |    1 |</span><br><span class="line">|  5 | yue      | 123                              |  10 |    1 |</span><br><span class="line">|  6 | ye       | 123                              |  20 |    1 |</span><br><span class="line">|  7 | chun     | 202cb962ac59075b964b07152d234b70 |  10 |    0 |</span><br><span class="line">+<span class="comment">----+----------+----------------------------------+-----+------+</span></span><br><span class="line">7 rows in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure>
<p>md5(‘123’)表示计算字符串的哈希值</p>
<h2 id="2）第二种方法"><a href="#2）第二种方法" class="headerlink" title="2）第二种方法"></a>2）第二种方法</h2><p><strong>INSERT [INTO] tbl_name SET col_name={expr | DEFAULT},..</strong><br>与第一种方式区别在于，此方法可以使用子查询(SubQuery) ，而且只能一次性插入一条记录</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; INSERT users SET username = 'tian',password = '1233';</span><br><span class="line">Query OK, 1 row affected (0.03 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; SELECT * FROM users;</span><br><span class="line">+<span class="comment">----+----------+----------------------------------+-----+------+</span></span><br><span class="line">| id | username | password                         | age | sex  |</span><br><span class="line">+<span class="comment">----+----------+----------------------------------+-----+------+</span></span><br><span class="line">|  1 | hua      | 123                              |  18 |    1 |</span><br><span class="line">|  2 | hao      | 123                              |  18 |    1 |</span><br><span class="line">|  3 | yue      | 123                              |  18 |    1 |</span><br><span class="line">|  4 | yuan     | 123                              |  20 |    1 |</span><br><span class="line">|  5 | yue      | 123                              |  10 |    1 |</span><br><span class="line">|  6 | ye       | 123                              |  20 |    1 |</span><br><span class="line">|  7 | chun     | 202cb962ac59075b964b07152d234b70 |  10 |    0 |</span><br><span class="line">|  8 | tian     | 1233                             |  10 | NULL |</span><br><span class="line">+<span class="comment">----+----------+----------------------------------+-----+------+</span></span><br><span class="line">8 rows in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure>
<p>因为age有默认值，sex允许为空，所以可以只对username和password赋值。</p>
<h2 id="3）第三种方法"><a href="#3）第三种方法" class="headerlink" title="3）第三种方法"></a>3）第三种方法</h2><p>INSERT SELECT语句：<br><strong>INSERT [INTO] tbl_name [(col_name,….)] SELECT …</strong><br>此方法可以将查询结果插入到指定数据表。<br>由于对于SELECT语句理解较少，暂时先放这。(本章第9小节进行了讲解)</p>
<h1 id="2-单表更新记录"><a href="#2-单表更新记录" class="headerlink" title="2. 单表更新记录"></a>2. 单表更新记录</h1><p>当我们书写记录的过程中，字段值可能出现错误，或者说我们想要更改字段值，就需要使用UPDATE语句，下面这种方式是单表更新，还有一种方式是多表更新，这种方式等学到连接时再讲。</p>
<p><strong>UPDATE [LOW_PRIORITY] [IGNORE] table_reference SET col_name1={expr|DEFAULT}[,col_name2={expr|DEFAULT}]…[WHERE where_condition]</strong></p>
<p>如果省略WHERE条件，将对所有的记录更新。<br>下面来看一个示例：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; UPDATE users SET age=age+10;</span><br><span class="line">Query OK, 8 rows affected (0.00 sec)</span><br><span class="line">Rows matched: 8  Changed: 8  Warnings: 0</span><br><span class="line"></span><br><span class="line">mysql&gt; SELECT * FROM users;</span><br><span class="line">+<span class="comment">----+----------+----------------------------------+-----+------+</span></span><br><span class="line">| id | username | password                         | age | sex  |</span><br><span class="line">+<span class="comment">----+----------+----------------------------------+-----+------+</span></span><br><span class="line">|  1 | hua      | 123                              |  28 |    1 |</span><br><span class="line">|  2 | hao      | 123                              |  28 |    1 |</span><br><span class="line">|  3 | yue      | 123                              |  28 |    1 |</span><br><span class="line">|  4 | yuan     | 123                              |  30 |    1 |</span><br><span class="line">|  5 | yue      | 123                              |  20 |    1 |</span><br><span class="line">|  6 | ye       | 123                              |  30 |    1 |</span><br><span class="line">|  7 | chun     | 202cb962ac59075b964b07152d234b70 |  20 |    0 |</span><br><span class="line">|  8 | tian     | 1233                             |  20 | NULL |</span><br><span class="line">+<span class="comment">----+----------+----------------------------------+-----+------+</span></span><br><span class="line">8 rows in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure>
<p>第一个语句的意思就是，将所有记录的age字段的值加10。<br>上面的例子是更新了一列，当然我也可以更新俩列：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; UPDATE users SET age=age-id,sex=0;</span><br><span class="line">Query OK, 8 rows affected (0.03 sec)</span><br><span class="line">Rows matched: 8  Changed: 8  Warnings: 0</span><br><span class="line"></span><br><span class="line">mysql&gt; SELECT * FROM users;</span><br><span class="line">+<span class="comment">----+----------+----------------------------------+-----+------+</span></span><br><span class="line">| id | username | password                         | age | sex  |</span><br><span class="line">+<span class="comment">----+----------+----------------------------------+-----+------+</span></span><br><span class="line">|  1 | hua      | 123                              |  27 |    0 |</span><br><span class="line">|  2 | hao      | 123                              |  26 |    0 |</span><br><span class="line">|  3 | yue      | 123                              |  25 |    0 |</span><br><span class="line">|  4 | yuan     | 123                              |  26 |    0 |</span><br><span class="line">|  5 | yue      | 123                              |  15 |    0 |</span><br><span class="line">|  6 | ye       | 123                              |  24 |    0 |</span><br><span class="line">|  7 | chun     | 202cb962ac59075b964b07152d234b70 |  13 |    0 |</span><br><span class="line">|  8 | tian     | 1233                             |  12 |    0 |</span><br><span class="line">+<span class="comment">----+----------+----------------------------------+-----+------+</span></span><br><span class="line">8 rows in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure>
<p>我更新age为age减去id的值，并且将sex全部设置为了0；<br>上面都是对全部的记录更新，下面就让我们使用WHERE对特定的记录进行更新吧！<br>将所有id为偶数的user的age加上10：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; UPDATE users SET age=age+10 WHERE id%2=0;</span><br><span class="line">Query OK, 4 rows affected (0.03 sec)</span><br><span class="line">Rows matched: 4  Changed: 4  Warnings: 0</span><br><span class="line"></span><br><span class="line">mysql&gt; SELECT * FROM users;</span><br><span class="line">+<span class="comment">----+----------+----------------------------------+-----+------+</span></span><br><span class="line">| id | username | password                         | age | sex  |</span><br><span class="line">+<span class="comment">----+----------+----------------------------------+-----+------+</span></span><br><span class="line">|  1 | hua      | 123                              |  27 |    0 |</span><br><span class="line">|  2 | hao      | 123                              |  36 |    0 |</span><br><span class="line">|  3 | yue      | 123                              |  25 |    0 |</span><br><span class="line">|  4 | yuan     | 123                              |  36 |    0 |</span><br><span class="line">|  5 | yue      | 123                              |  15 |    0 |</span><br><span class="line">|  6 | ye       | 123                              |  34 |    0 |</span><br><span class="line">|  7 | chun     | 202cb962ac59075b964b07152d234b70 |  13 |    0 |</span><br><span class="line">|  8 | tian     | 1233                             |  22 |    0 |</span><br><span class="line">+<span class="comment">----+----------+----------------------------------+-----+------+</span></span><br><span class="line">8 rows in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure>

<p>可以看到有四条记录被修改。</p>
<h1 id="3-单表删除记录"><a href="#3-单表删除记录" class="headerlink" title="3. 单表删除记录"></a>3. 单表删除记录</h1><p>如果数据表中的记录不想要啦，还可以进行删除操作，同样也有两种方式：单表删除和多表删除，也只看单表删除。</p>
<p><strong>DELETE FROM tbl_name [WHERE where_condition]</strong></p>
<p>当省略WHERE时将删除所有记录<br>下面我们删除id=5的记录：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; DELETE FROM users WHERE id = 5;</span><br><span class="line">Query OK, 1 row affected (0.03 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; SELECT * FROM users;</span><br><span class="line">+<span class="comment">----+----------+----------------------------------+-----+------+</span></span><br><span class="line">| id | username | password                         | age | sex  |</span><br><span class="line">+<span class="comment">----+----------+----------------------------------+-----+------+</span></span><br><span class="line">|  1 | hua      | 123                              |  27 |    0 |</span><br><span class="line">|  2 | hao      | 123                              |  36 |    0 |</span><br><span class="line">|  3 | yue      | 123                              |  25 |    0 |</span><br><span class="line">|  4 | yuan     | 123                              |  36 |    0 |</span><br><span class="line">|  6 | ye       | 123                              |  34 |    0 |</span><br><span class="line">|  7 | chun     | 202cb962ac59075b964b07152d234b70 |  13 |    0 |</span><br><span class="line">|  8 | tian     | 1233                             |  22 |    0 |</span><br><span class="line">+<span class="comment">----+----------+----------------------------------+-----+------+</span></span><br><span class="line">7 rows in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure>

<p>那么当我们再增加一条记录时，它的id是5呢还是9呢？<br>试试：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; INSERT users VALUES(NULL,'hui','345',18,0);</span><br><span class="line">Query OK, 1 row affected (0.03 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; SELECT * FROM users;</span><br><span class="line">+<span class="comment">----+----------+----------------------------------+-----+------+</span></span><br><span class="line">| id | username | password                         | age | sex  |</span><br><span class="line">+<span class="comment">----+----------+----------------------------------+-----+------+</span></span><br><span class="line">|  1 | hua      | 123                              |  27 |    0 |</span><br><span class="line">|  2 | hao      | 123                              |  36 |    0 |</span><br><span class="line">|  3 | yue      | 123                              |  25 |    0 |</span><br><span class="line">|  4 | yuan     | 123                              |  36 |    0 |</span><br><span class="line">|  6 | ye       | 123                              |  34 |    0 |</span><br><span class="line">|  7 | chun     | 202cb962ac59075b964b07152d234b70 |  13 |    0 |</span><br><span class="line">|  8 | tian     | 1233                             |  22 |    0 |</span><br><span class="line">|  9 | hui      | 345                              |  18 |    0 |</span><br><span class="line">+<span class="comment">----+----------+----------------------------------+-----+------+</span></span><br><span class="line">8 rows in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure>

<p>答案是9。可见当增加记录时，即使前面id号不连续，它仍然为当前最大的id加一。</p>
<h1 id="4-SELECT查询表达式解析"><a href="#4-SELECT查询表达式解析" class="headerlink" title="4. SELECT查询表达式解析"></a>4. SELECT查询表达式解析</h1><p>曾有人说过select语句占数据表操作的百分之八十以上，嗯。。。还没有体会到<br><strong>select select_expr<br>[<br>from table_references 表的参照<br>[where where_condition] 条件<br>[group by {col_name|position} [asc|sesc],…记录的分组<br>[having where_condition] 分组时对分组的条件进行设定<br>[order by {col_name|expr|position} [asc|desc]…]对于结果进行排序<br>[limit {[offset,]row_count|row_count OFFSET offset}]限制返回结果的数量<br>]</strong><br>（下面几节依次讲解）<br>每一个表达式表示想要的一列，必须有至少一个<br>多个列之间英文逗号分隔<br>星号(<em>)表示所有列。tbl_name.</em>可以表示命名表的所有列</p>
<p>之前我们最常使用的：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; SELECT * FROM users;</span><br><span class="line">+<span class="comment">----+----------+----------------------------------+-----+------+</span></span><br><span class="line">| id | username | password                         | age | sex  |</span><br><span class="line">+<span class="comment">----+----------+----------------------------------+-----+------+</span></span><br><span class="line">|  1 | hua      | 123                              |  27 |    0 |</span><br><span class="line">|  2 | hao      | 123                              |  36 |    0 |</span><br><span class="line">|  3 | yue      | 123                              |  25 |    0 |</span><br><span class="line">|  4 | yuan     | 123                              |  36 |    0 |</span><br><span class="line">|  6 | ye       | 123                              |  34 |    0 |</span><br><span class="line">|  7 | chun     | 202cb962ac59075b964b07152d234b70 |  13 |    0 |</span><br><span class="line">|  8 | tian     | 1233                             |  22 |    0 |</span><br><span class="line">|  9 | hui      | 345                              |  18 |    0 |</span><br><span class="line">+<span class="comment">----+----------+----------------------------------+-----+------+</span></span><br><span class="line">8 rows in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure>
<p>这是对所有列的查看，如果我只想看特定的几个列呢？</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; SELECT id,username FROM users;</span><br><span class="line">+<span class="comment">----+----------+</span></span><br><span class="line">| id | username |</span><br><span class="line">+<span class="comment">----+----------+</span></span><br><span class="line">|  1 | hua      |</span><br><span class="line">|  2 | hao      |</span><br><span class="line">|  3 | yue      |</span><br><span class="line">|  4 | yuan     |</span><br><span class="line">|  6 | ye       |</span><br><span class="line">|  7 | chun     |</span><br><span class="line">|  8 | tian     |</span><br><span class="line">|  9 | hui      |</span><br><span class="line">+<span class="comment">----+----------+</span></span><br><span class="line">8 rows in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure>

<p>只显示了id和username两个列，查询的顺序和数据表中列的顺序可以不一致，下面看看当我把id和username的查询顺序倒过来以后的情形：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; SELECT username,id FROM users;</span><br><span class="line">+<span class="comment">----------+----+</span></span><br><span class="line">| username | id |</span><br><span class="line">+<span class="comment">----------+----+</span></span><br><span class="line">| hua      |  1 |</span><br><span class="line">| hao      |  2 |</span><br><span class="line">| yue      |  3 |</span><br><span class="line">| yuan     |  4 |</span><br><span class="line">| ye       |  6 |</span><br><span class="line">| chun     |  7 |</span><br><span class="line">| tian     |  8 |</span><br><span class="line">| hui      |  9 |</span><br><span class="line">+<span class="comment">----------+----+</span></span><br><span class="line">8 rows in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure>
<p>显示的结果也倒过来啦，根据select的顺序显示。<br>tbl_name.*可以表示命名表的所有列，也就是可以在列的前面加上数据表的名字：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; SELECT users.username,users.id FROM users;</span><br><span class="line">+<span class="comment">----------+----+</span></span><br><span class="line">| username | id |</span><br><span class="line">+<span class="comment">----------+----+</span></span><br><span class="line">| hua      |  1 |</span><br><span class="line">| hao      |  2 |</span><br><span class="line">| yue      |  3 |</span><br><span class="line">| yuan     |  4 |</span><br><span class="line">| ye       |  6 |</span><br><span class="line">| chun     |  7 |</span><br><span class="line">| tian     |  8 |</span><br><span class="line">| hui      |  9 |</span><br><span class="line">+<span class="comment">----------+----+</span></span><br><span class="line">8 rows in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure>
<p>和上面结果一样，当然，当我们只对一个表进行操作时，没有这个必要。在对多表进行操作时，可以清晰辨认列属于哪张数据表。<br>有些字段的名字比较复杂，不太容易记忆，这时可以赋予别名。<br>查询表达式可以使用[AS] alias_name为其赋予别名<br>别名可用于GROUP BY,ORDER BY或HAVING子句</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; SELECT id AS username,username AS uname FROM users;</span><br><span class="line">+<span class="comment">----------+-------+</span></span><br><span class="line">| username | uname |</span><br><span class="line">+<span class="comment">----------+-------+</span></span><br><span class="line">|        1 | hua   |</span><br><span class="line">|        2 | hao   |</span><br><span class="line">|        3 | yue   |</span><br><span class="line">|        4 | yuan  |</span><br><span class="line">|        6 | ye    |</span><br><span class="line">|        7 | chun  |</span><br><span class="line">|        8 | tian  |</span><br><span class="line">|        9 | hui   |</span><br><span class="line">+<span class="comment">----------+-------+</span></span><br><span class="line">8 rows in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure>

<p>将id命名为username，将username命名为uname。<br>AS可以省略，当然不推荐，有时可能与显示多条字段混淆。<br>5. where语句进行条件查询<br>对记录进行过滤，如果没有指定WHERE子句，则显示所有记录<br>在WHERE表达式中，可以使用MySQL支持的函数或运算符</p>
<h1 id="6-查询结果分组"><a href="#6-查询结果分组" class="headerlink" title="6. 查询结果分组"></a>6. 查询结果分组</h1><p><strong>[GROUP BY {col_name | position} [ASC | DESC], …]</strong><br><strong>ASC</strong>：升序，默认<br><strong>DESC</strong>：降序<br><strong>position</strong>：SELECT语句中列的序号 </p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; SELECT password FROM users GROUP BY password;</span><br><span class="line">+<span class="comment">----------------------------------+</span></span><br><span class="line">| password                         |</span><br><span class="line">+<span class="comment">----------------------------------+</span></span><br><span class="line">| 123                              |</span><br><span class="line">| 1233                             |</span><br><span class="line">| 202cb962ac59075b964b07152d234b70 |</span><br><span class="line">| 345                              |</span><br><span class="line">+<span class="comment">----------------------------------+</span></span><br><span class="line">4 rows in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure>

<p>根据password进行分组，分成了四个组<br>除了写名字还可以写位置：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; SELECT password FROM users GROUP BY 1;</span><br><span class="line">+<span class="comment">----------------------------------+</span></span><br><span class="line">| password                         |</span><br><span class="line">+<span class="comment">----------------------------------+</span></span><br><span class="line">| 123                              |</span><br><span class="line">| 1233                             |</span><br><span class="line">| 202cb962ac59075b964b07152d234b70 |</span><br><span class="line">| 345                              |</span><br><span class="line">+<span class="comment">----------------------------------+</span></span><br><span class="line">4 rows in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure>

<p>这里1是指select字段中第一个出现的字段，这里明显是password ，所以尽量指定名称，直观一点<br>如果把sex放第一个位置，那么只有一个分组啦</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; SELECT sex,password FROM users GROUP BY 1;</span><br><span class="line">+<span class="comment">------+----------+</span></span><br><span class="line">| sex  | password |</span><br><span class="line">+<span class="comment">------+----------+</span></span><br><span class="line">|    0 | 123      |</span><br><span class="line">+<span class="comment">------+----------+</span></span><br><span class="line">1 row in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure>


<h1 id="7-分组条件"><a href="#7-分组条件" class="headerlink" title="7. 分组条件"></a>7. 分组条件</h1><p><strong>[ HAVING where_condition ]</strong><br>这时我们可以对符合一定条件的记录进行分组</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; SELECT password FROM users GROUP BY 1 HAVING age&gt;10;</span><br><span class="line">ERROR 1054 (42S22): Unknown column 'age' in 'having clause'</span><br></pre></td></tr></table></figure>
<p>想对age&gt;10的password进行分组，居然出现错误。<br>原因有两个：<br>第一个：HAVING 后面可以使用聚合函数（MAX最大值, MIN最小值，AVG平均值，SUM求和）<br>第二个：不使用聚合函数的话，HAVING 后出现的字段也必须在SELECT后面出现<br>来试一下：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; SELECT password,age FROM users GROUP BY 1 HAVING age&gt;10;</span><br><span class="line">+<span class="comment">----------------------------------+-----+</span></span><br><span class="line">| password                         | age |</span><br><span class="line">+<span class="comment">----------------------------------+-----+</span></span><br><span class="line">| 123                              |  27 |</span><br><span class="line">| 1233                             |  22 |</span><br><span class="line">| 202cb962ac59075b964b07152d234b70 |  13 |</span><br><span class="line">| 345                              |  18 |</span><br><span class="line">+<span class="comment">----------------------------------+-----+</span></span><br><span class="line">4 rows in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure>
<p>在SELECT后面加上age后，成功分类<br>再试一下聚合函数：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; SELECT password FROM users GROUP BY 1 HAVING AVG(age)&gt;10;</span><br><span class="line">+<span class="comment">----------------------------------+</span></span><br><span class="line">| password                         |</span><br><span class="line">+<span class="comment">----------------------------------+</span></span><br><span class="line">| 123                              |</span><br><span class="line">| 1233                             |</span><br><span class="line">| 202cb962ac59075b964b07152d234b70 |</span><br><span class="line">| 345                              |</span><br><span class="line">+<span class="comment">----------------------------------+</span></span><br><span class="line">4 rows in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure>

<h1 id="8-查询结果排序"><a href="#8-查询结果排序" class="headerlink" title="8. 查询结果排序"></a>8. 查询结果排序</h1><p>除了可以对查询结果条件进行指定，还可以对查询结果进行排序<br>[ORDER BY { col_name | expr | position }[ ASC | DESC ], … ]<br>可以按照某一字段进行排序，也可以按照位置进行排序，和GROUP BY完全相同的，ASC为升序，并且是默认的，DESC为降序，也可以同时以两个或者两个以上字段进行排序。<br>将查询结果按id降序排列</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; SELECT * FROM users ORDER BY id DESC;</span><br><span class="line">+<span class="comment">----+----------+----------------------------------+-----+------+</span></span><br><span class="line">| id | username | password                         | age | sex  |</span><br><span class="line">+<span class="comment">----+----------+----------------------------------+-----+------+</span></span><br><span class="line">|  9 | hui      | 345                              |  18 |    0 |</span><br><span class="line">|  8 | tian     | 1233                             |  22 |    0 |</span><br><span class="line">|  7 | chun     | 202cb962ac59075b964b07152d234b70 |  13 |    0 |</span><br><span class="line">|  6 | ye       | 123                              |  34 |    0 |</span><br><span class="line">|  4 | yuan     | 123                              |  36 |    0 |</span><br><span class="line">|  3 | yue      | 123                              |  25 |    0 |</span><br><span class="line">|  2 | hao      | 123                              |  36 |    0 |</span><br><span class="line">|  1 | hua      | 123                              |  27 |    0 |</span><br><span class="line">+<span class="comment">----+----------+----------------------------------+-----+------+</span></span><br><span class="line">8 rows in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure>
<p>当然，也可以对两个字段进行排序<br>先对age进行升序排列：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; SELECT * FROM users ORDER BY age;</span><br><span class="line">+<span class="comment">----+----------+----------------------------------+-----+------+</span></span><br><span class="line">| id | username | password                         | age | sex  |</span><br><span class="line">+<span class="comment">----+----------+----------------------------------+-----+------+</span></span><br><span class="line">|  7 | chun     | 202cb962ac59075b964b07152d234b70 |  13 |    0 |</span><br><span class="line">|  9 | hui      | 345                              |  18 |    0 |</span><br><span class="line">|  8 | tian     | 1233                             |  22 |    0 |</span><br><span class="line">|  3 | yue      | 123                              |  25 |    0 |</span><br><span class="line">|  1 | hua      | 123                              |  27 |    0 |</span><br><span class="line">|  6 | ye       | 123                              |  34 |    0 |</span><br><span class="line">|  2 | hao      | 123                              |  36 |    0 |</span><br><span class="line">|  4 | yuan     | 123                              |  36 |    0 |</span><br><span class="line">+<span class="comment">----+----------+----------------------------------+-----+------+</span></span><br><span class="line">8 rows in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure>

<p>可以看到age有相同的，比如36，再按照id降序排列：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; SELECT * FROM users ORDER BY age,id DESC;</span><br><span class="line">+<span class="comment">----+----------+----------------------------------+-----+------+</span></span><br><span class="line">| id | username | password                         | age | sex  |</span><br><span class="line">+<span class="comment">----+----------+----------------------------------+-----+------+</span></span><br><span class="line">|  7 | chun     | 202cb962ac59075b964b07152d234b70 |  13 |    0 |</span><br><span class="line">|  9 | hui      | 345                              |  18 |    0 |</span><br><span class="line">|  8 | tian     | 1233                             |  22 |    0 |</span><br><span class="line">|  3 | yue      | 123                              |  25 |    0 |</span><br><span class="line">|  1 | hua      | 123                              |  27 |    0 |</span><br><span class="line">|  6 | ye       | 123                              |  34 |    0 |</span><br><span class="line">|  4 | yuan     | 123                              |  36 |    0 |</span><br><span class="line">|  2 | hao      | 123                              |  36 |    0 |</span><br><span class="line">+<span class="comment">----+----------+----------------------------------+-----+------+</span></span><br><span class="line">8 rows in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure>

<p>可以看到最后两条age相同的记录，又按照id进行了降序排列。</p>
<h1 id="9-限制查询数量"><a href="#9-限制查询数量" class="headerlink" title="9. 限制查询数量"></a>9. 限制查询数量</h1><h2 id="1）限制查询结果返回的数量"><a href="#1）限制查询结果返回的数量" class="headerlink" title="1）限制查询结果返回的数量"></a>1）限制查询结果返回的数量</h2><p><strong>[ LIMIT { [ offset, ] row_count OFFSET offset } ]</strong><br>默认使用SELECT,返回所有的记录：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; SELECT * FROM users;</span><br><span class="line">+<span class="comment">----+----------+----------------------------------+-----+------+</span></span><br><span class="line">| id | username | password                         | age | sex  |</span><br><span class="line">+<span class="comment">----+----------+----------------------------------+-----+------+</span></span><br><span class="line">|  1 | hua      | 123                              |  27 |    0 |</span><br><span class="line">|  2 | hao      | 123                              |  36 |    0 |</span><br><span class="line">|  3 | yue      | 123                              |  25 |    0 |</span><br><span class="line">|  4 | yuan     | 123                              |  36 |    0 |</span><br><span class="line">|  6 | ye       | 123                              |  34 |    0 |</span><br><span class="line">|  7 | chun     | 202cb962ac59075b964b07152d234b70 |  13 |    0 |</span><br><span class="line">|  8 | tian     | 1233                             |  22 |    0 |</span><br><span class="line">|  9 | hui      | 345                              |  18 |    0 |</span><br><span class="line">+<span class="comment">----+----------+----------------------------------+-----+------+</span></span><br><span class="line">8 rows in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure>

<p>使用limit语句就可以限制返回的数量：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; SELECT * FROM users LIMIT 2;</span><br><span class="line">+<span class="comment">----+----------+----------+-----+------+</span></span><br><span class="line">| id | username | password | age | sex  |</span><br><span class="line">+<span class="comment">----+----------+----------+-----+------+</span></span><br><span class="line">|  1 | hua      | 123      |  27 |    0 |</span><br><span class="line">|  2 | hao      | 123      |  36 |    0 |</span><br><span class="line">+<span class="comment">----+----------+----------+-----+------+</span></span><br><span class="line">2 rows in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure>
<p>可以看出只返回了两条数据。<br>如果我想返回某个位置到另一个位置的记录呢？</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; SELECT * FROM users LIMIT 3,5;</span><br><span class="line">+<span class="comment">----+----------+----------------------------------+-----+------+</span></span><br><span class="line">| id | username | password                         | age | sex  |</span><br><span class="line">+<span class="comment">----+----------+----------------------------------+-----+------+</span></span><br><span class="line">|  4 | yuan     | 123                              |  36 |    0 |</span><br><span class="line">|  6 | ye       | 123                              |  34 |    0 |</span><br><span class="line">|  7 | chun     | 202cb962ac59075b964b07152d234b70 |  13 |    0 |</span><br><span class="line">|  8 | tian     | 1233                             |  22 |    0 |</span><br><span class="line">|  9 | hui      | 345                              |  18 |    0 |</span><br><span class="line">+<span class="comment">----+----------+----------------------------------+-----+------+</span></span><br><span class="line">5 rows in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure>

<p> 注意：select 语句记录从0开始编号（0，1，2，3，4···）为第1、2、3、4、5···条记录，并且与id号无关，也就是说查询的id号和结果集没有任何的联系，只要排在结果集中第一个位置，那么它就是0，排在第二个位置就是1。<br> 如果只添加一个数字，它表示从第一条记录开始返回，返回这个数字的数据数，如果返回第三条和第四条数据，就需要告诉从第几条返回，返回几条。拓展：在以后PHP当中，进行分页的时候，就会利用LIMIT语句来进行分页效果的实现，在分页效果实现当中，偏移值的计算公式是已经计算好的，计算公式就是当前括号中的页码减1*每一页显示的记录数。</p>
<h2 id="2）将查询结果插入另一个数据表"><a href="#2）将查询结果插入另一个数据表" class="headerlink" title="2）将查询结果插入另一个数据表"></a>2）将查询结果插入另一个数据表</h2><p><strong>INSERT [INTO] tb1_name [(col_name, …)] SELECT col_name  FROM   tb2_name …</strong><br>它可以将查找的结果，存储到指定的数据表。<br>首先再创建一个新的数据表：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; CREATE TABLE test(</span><br><span class="line">    -&gt; id TINYINT UNSIGNED PRIMARY KEY AUTO_INCREMENT,</span><br><span class="line">    -&gt; username VARCHAR(20)</span><br><span class="line">    -&gt; );</span><br><span class="line">Query OK, 0 rows affected (0.04 sec)</span><br></pre></td></tr></table></figure>

<p>下面我们将users表中age大于30的username写入到新建的test表中的username</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; INSERT test SELECT username FROM users WHERE age&gt;30;</span><br><span class="line">ERROR 1136 (21S01): Column count doesn't match value count at row 1</span><br></pre></td></tr></table></figure>
<p>出现错误<br>注意：因为test表中需要插入的只有一个字段，所以SELECT结果集中也只有一个字段，在插入时要指定test表中指定字段，因为test表中有两个字段，即使是主键自增也不可以。<br>下面我们知道test表中的username：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; INSERT test(username) SELECT username FROM users WHERE age&gt;30;</span><br><span class="line">Query OK, 3 rows affected (0.03 sec)</span><br><span class="line">Records: 3  Duplicates: 0  Warnings: 0</span><br></pre></td></tr></table></figure>
<p>查看一下：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; SELECT * FROM test;</span><br><span class="line">+<span class="comment">----+----------+</span></span><br><span class="line">| id | username |</span><br><span class="line">+<span class="comment">----+----------+</span></span><br><span class="line">|  1 | hao      |</span><br><span class="line">|  2 | yuan     |</span><br><span class="line">|  3 | ye       |</span><br><span class="line">+<span class="comment">----+----------+</span></span><br><span class="line">3 rows in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure>
<p>将age大于30的username插入到了test表中。</p>
<h1 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h1><p><strong>数据记录的操作</strong>：增：INSERT    更：UPDATE    删：DELETE     查：SELECT<br><strong>增 INSERT</strong>:可以通过三种方法进行记录的插入，分别为<br><strong>普通INSERT</strong><br><strong>INSERT SET</strong><br><strong>INSERT SELECT语句</strong><br>（1） INSERT [INTO] tb1_name [(col_name,…)] {VALUES | VALUE} ({expr | DEFUALT},…),(…),…<br>注意：如果col_name被省略，意味着所有的列都要依次被赋值，不可以省略；<br>对于默认编号（AUTO_INCREMENT）的字段，使用NULL/DEFUALT进行插入;<br>而且插入的记录是识别算术，函数和字符表达式的<br>（2）INSERT [INTO]  tb1_name SET col1_name={expr | DEFAULT}, …<br>如：INSERT users2 SET username=’xxx’,password=’xxx’;<br>说明与第一种不同之处在于：此方法可以使用子查询（SubQuery）<br>（3）INSERT [INTO] tb1_name [(col_name, …)] SELECT …<br>此方法可以将查询结果插入到指定数据表中</p>
<p><strong>更 UPDATE</strong>：实际有两种更新语句，单表更新和多表更新（详见第五章)</p>
<p><strong>删 DELETE</strong>:存在两种语法结构，单表删除、多表删除。<br>单表删除：<br>DELETE FROM tb1_name [WHERE where_condition]</p>
<p>如：删除第五条记录：DELETE FROM users WHERE id = 5; 而后再添加记录，那么该条记录不会填充到第六条，而是以顺序填到最后一个</p>
<p>条件表达式<br>对记录进行过滤,如果没有指定WHERE子句,则显示所有记录。<br>在WHERE表达式中,可以使用MySQL支持的函数或运算符。<br><strong>查 select select_expr<br>[<br>from table_references 表的参照<br>[where where_condition] 条件<br>[group by {col_name|position} [asc|sesc],…记录的分组<br>[having where_condition] 分组时对分组的条件进行设定<br>[order by {col_name|expr|position} [asc|desc]…]对于结果进行排序<br>[limit {[offset,]row_count|row_count OFFSET offset}]限制返回结果的数量<br>]</strong><br>SELECT后面可以省略：如SELECT VERSION();/SELECT NOW();/SELECT 3+5;/SELECT id,username FROM users;/SELECT username,id FROM users;</p>
<p>所以查询顺序影响结果的输出顺序！！！</p>
<p> *表示所有的列</p>
<p>可以在查询的列前面加上表名+.  如：SELECT users.id,user2.password FROM users;</p>
<p>当列名称复杂时可以用别名：如 SELECT users.id AS usersid, users.username AS uname FROM users;(注意一下AS)</p>
<p>所以查询的别名也影响输出结果的列名！！！</p>
<p>查询结果分组：[GROUP BY {col_name | position} [ASC | DESC], … ]</p>
<p>ASC  升序；DESC  降序；</p>
<p>如：SELECT password FROM users GROUP BY password/“位置”; 查看password的分组结果。（一般指定名称就行）</p>
<p>在GROUP BY 进行分组的时候，还可以进行设置分组条件：[HAVING where_condition]</p>
<p>如：SELECT password FROM users GROUP BY 1 HAVING age &gt; 35; 这个语句错误，原因是sex里面没有age，所以更正为：SELECT password，age FROM users GROUP BY 1 HAVING age &gt; 10;或者采用聚合函数（max,min,sum等）  如 SELECT password FROM users GROUP BY 1 HAVING AVG(age)&gt;10;<br>还可以对查询分组的结果进行排序：</p>
<p>[ORDER BY {col_name | expr | position} [ASC | DESC], …]</p>
<p>如：SELECT * FROM users ORDER BY id, age DESC; 默认是升序。</p>
<p>除了返回记录的排序还可以对记录进行限制查询结果的数量：</p>
<p>[LIMIT ｛[offset,] row_count | row_count OFFSET offset｝]</p>
<p>如：SELECT * FROM users LIMIT 2; 返回两条记录；</p>
<p>SELECT * FROM users LIMIT 2，2；返回的是偏移值（索引号）为2的记录开始的两条记录（不管升序还是降序，第一条记录的索引号都是0）；</p>
<p>插入记录：<br>INSERT [INTO] tb1_name [(col_name, …)] SELECT col_name  FROM   tb2_name …<br>说明:将查询结果插入到指定数据表的列</p>
<p>如：INSERT test(username) SELECT username FROM users WHERE age &gt;= 30; 查找username表里的age&gt;=30的username,插入到test表中的username列————综合一点的</p>
]]></content>
      <categories>
        <category>数据库</category>
      </categories>
      <tags>
        <tag>MySQL</tag>
        <tag>数据库</tag>
      </tags>
  </entry>
  <entry>
    <title>第三章 约束以及修改数据表</title>
    <url>/2019/12/14/%E7%AC%AC%E4%B8%89%E7%AB%A0%E7%BA%A6%E6%9D%9F%E4%BB%A5%E5%8F%8A%E4%BF%AE%E6%94%B9%E6%95%B0%E6%8D%AE%E8%A1%A8/</url>
    <content><![CDATA[<p>  本章主要讲解外键约束以及其他约束的增加删除操作，通过本章将会对数据表列的操作更加熟练。</p>
<a id="more"></a> 
<h1 id="1-外键约束"><a href="#1-外键约束" class="headerlink" title="1.外键约束"></a>1.外键约束</h1><p><strong>目的</strong>：保持数据一致性，完整性；实现一对一或一对多关系。<br>约束保证数据的完整性和一致性<br>约束分为表级约束和列级约束（根据约束所针对的字段数目的多少决定）<br><strong>列级约束</strong>：只针对表中的一个字段进行约束；<br><strong>表级约束</strong>：针对表中的两个及以上字段进行约束。<br><strong>约束类型包括</strong>：（功能划分）<br>NOT NULL(非空约束)<br>PRIMARY KEY(主键约束)<br>UNIQUE KEY(唯一约束)<br>DEFAULT(默认约束)<br>FOREIGN KEY(外键约束)<br><strong>外键约束的要求</strong>：</p>
<ol>
<li>父表和子表必须使用相同的存储引擎，而且禁止使用临时表<br>子表：具有外键列的表<br>父表：子表参照的表</li>
<li>数据表的存储引擎只能为InnoDB</li>
<li>外键列和参照列必须具有类似的数据类型。其中数字的长度或是否有符号位必须相同；而字符的长度则可以不同<br>外键列：加过FOREIGN 关键字的列<br>参照列：外键列所参照的列</li>
<li>外键列和参照列必须创建索引。 如果参照列不存在索引的话，MYSQL将自动创建索引<br>【外键约束】FOREIGN KEY(column) REFERENCES table(key)<br>【显示索引】SHOW INDEXES FROM [table]\G;<br>要创建外键约束必须满足以上四点要求。<h2 id="1）编辑数据表的默认存储引擎："><a href="#1）编辑数据表的默认存储引擎：" class="headerlink" title="1）编辑数据表的默认存储引擎："></a>1）编辑数据表的默认存储引擎：</h2>mysql配置文件（D:\MySQL\MySQL Server 5.5\my.ini   安装路径下）：<br>default-storage-engine=INNODB；<br>（一般默认都为这个）<h2 id="2）创建数据类型相同的外键列和参照列"><a href="#2）创建数据类型相同的外键列和参照列" class="headerlink" title="2）创建数据类型相同的外键列和参照列"></a>2）创建数据类型相同的外键列和参照列</h2>登录客户端，进入test数据库后，让我们来创建一个新的数据表：<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; CREATE TABLE provinces(</span><br><span class="line">    -&gt; id SMALLINT UNSIGNED PRIMARY KEY AUTO_INCREMENT,</span><br><span class="line">    -&gt; pname varchar(20) NOT NULL</span><br><span class="line">    -&gt; );</span><br><span class="line">Query OK, 0 rows affected (0.05 sec)</span><br></pre></td></tr></table></figure>
查看数据表是否采用了我们的默认引擎INNODB<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; SHOW CREATE TABLE provinces;</span><br><span class="line">+<span class="comment">-----------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------+</span></span><br><span class="line">| Table     | <span class="keyword">Create</span> <span class="keyword">Table</span>                                                                                                                                                              |</span><br><span class="line">+<span class="comment">-----------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------+</span></span><br><span class="line">| provinces | <span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`provinces`</span> (</span><br><span class="line">  <span class="string">`id`</span> <span class="built_in">smallint</span>(<span class="number">5</span>) <span class="keyword">unsigned</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> AUTO_INCREMENT,</span><br><span class="line">  <span class="string">`pname`</span> <span class="built_in">varchar</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">  PRIMARY <span class="keyword">KEY</span> (<span class="string">`id`</span>)</span><br><span class="line">) <span class="keyword">ENGINE</span>=<span class="keyword">InnoDB</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8 |</span><br><span class="line">+<span class="comment">-----------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------+</span></span><br><span class="line"><span class="number">1</span> <span class="keyword">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.03</span> sec)</span><br></pre></td></tr></table></figure>

</li>
</ol>
<p>可以看到ENGINE=InnoDB，说明设置成功。这样provinces数据表就创建好啦！<br>接下来创建另一个数据表<br>创建一个用户数据表，包括用户的id、姓名，还有存储用户所在的省份信息。以前添加省份信息的话，需要增加省份字段还要添加字符，现在是关系型数据库，并不需要这样做啦，只需要存储省份的id即可。<br>pid参考provinces 的id</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; CREATE TABLE users(</span><br><span class="line">    -&gt; id SMALLINT UNSIGNED PRIMARY KEY AUTO_INCREMENT,</span><br><span class="line">    -&gt; username VARCHAR(10) NOT NULL,</span><br><span class="line">    -&gt; pid BIGINT,</span><br><span class="line">    -&gt; FOREIGN KEY (pid) REFERENCES provinces (id)</span><br><span class="line">    -&gt; );</span><br><span class="line">ERROR 1005 (HY000): Can't <span class="keyword">create</span> <span class="keyword">table</span> <span class="string">'test.users'</span> (errno: <span class="number">150</span>)</span><br></pre></td></tr></table></figure>
<p>居然出现了错误，仔细观察就会发现，pid的数据类型为BIGINT和参考provinces中id的数据类型不一致，所以产生错误。<br>再来创建一次</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; CREATE TABLE users(</span><br><span class="line">    -&gt; id SMALLINT UNSIGNED PRIMARY KEY AUTO_INCREMENT,</span><br><span class="line">    -&gt; username VARCHAR(10) NOT NULL,</span><br><span class="line">    -&gt; pid SMALLINT,</span><br><span class="line">    -&gt; FOREIGN KEY (pid) REFERENCES provinces (id)</span><br><span class="line">    -&gt; );</span><br><span class="line">ERROR 1005 (HY000): Can't <span class="keyword">create</span> <span class="keyword">table</span> <span class="string">'test.users'</span> (errno: <span class="number">150</span>)</span><br></pre></td></tr></table></figure>
<p>此时还是错误，说明大小不仅需要相同，是否有符号位，也必须相同。<br>最后一次</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; CREATE TABLE users(</span><br><span class="line">    -&gt; id SMALLINT UNSIGNED PRIMARY KEY AUTO_INCREMENT,</span><br><span class="line">    -&gt; username VARCHAR(10) NOT NULL,</span><br><span class="line">    -&gt; pid SMALLINT UNSIGNED,</span><br><span class="line">    -&gt; FOREIGN KEY (pid) REFERENCES provinces (id)</span><br><span class="line">    -&gt; );</span><br><span class="line">Query OK, 0 rows affected (0.04 sec)</span><br></pre></td></tr></table></figure>
<p>user就是我们创建的子表，provinces就是父表。pid就是外键列， id就是参照列，当为数字的情况下时，要保证长度和是否有符号位相同，字符的情况下可以不同。</p>
<p>provinces的id并没有创建索引，但是系统有没有为我们自动创建呢，答案是肯定的，因为我们使用了主键约束，主键约束在创建的同时会自动创建索引。我们来证明一下是否存在索引：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; SHOW INDEXES FROM provinces;</span><br><span class="line">+<span class="comment">-----------+------------+----------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+</span></span><br><span class="line">| Table     | Non_unique | Key_name | Seq_in_index | Column_name | Collation | Cardinality | Sub_part | Packed | Null | Index_type | <span class="keyword">Comment</span> | Index_comment |</span><br><span class="line">+<span class="comment">-----------+------------+----------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+</span></span><br><span class="line">| provinces |          <span class="number">0</span> | PRIMARY  |            <span class="number">1</span> | <span class="keyword">id</span>          | A         |           <span class="number">0</span> |     <span class="literal">NULL</span> | <span class="literal">NULL</span>   |      | BTREE      |         |               |</span><br><span class="line">+<span class="comment">-----------+------------+----------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+</span></span><br><span class="line"><span class="number">1</span> <span class="keyword">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.04</span> sec)</span><br></pre></td></tr></table></figure>

<p>这样看的不直观，改一下命令：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; SHOW INDEXES FROM provinces\G;</span><br><span class="line">*************************** 1. row ***************************</span><br><span class="line">        Table: provinces</span><br><span class="line">   Non_unique: 0</span><br><span class="line">     Key_name: PRIMARY</span><br><span class="line"> Seq_in_index: 1</span><br><span class="line">  Column_name: id</span><br><span class="line">    Collation: A</span><br><span class="line">  Cardinality: 0</span><br><span class="line">     Sub_part: NULL</span><br><span class="line">       Packed: NULL</span><br><span class="line">         Null:</span><br><span class="line">   Index_type: BTREE</span><br><span class="line">      <span class="keyword">Comment</span>:</span><br><span class="line">Index_comment:</span><br><span class="line"><span class="number">1</span> <span class="keyword">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line"><span class="keyword">ERROR</span>:</span><br><span class="line"><span class="keyword">No</span> <span class="keyword">query</span> specified</span><br></pre></td></tr></table></figure>

<p>可以看到id字段已经有了索引 （ Column_name: id ）<br>外键列的pid我们并没有创建主键，那么有没有创建索引呢？</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; SHOW INDEXES FROM users\G;</span><br><span class="line">*************************** 1. row ***************************</span><br><span class="line">        Table: users</span><br><span class="line">   Non_unique: 0</span><br><span class="line">     Key_name: PRIMARY</span><br><span class="line"> Seq_in_index: 1</span><br><span class="line">  Column_name: id</span><br><span class="line">    Collation: A</span><br><span class="line">  Cardinality: 0</span><br><span class="line">     Sub_part: NULL</span><br><span class="line">       Packed: NULL</span><br><span class="line">         Null:</span><br><span class="line">   Index_type: BTREE</span><br><span class="line">      <span class="keyword">Comment</span>:</span><br><span class="line">Index_comment:</span><br><span class="line">*************************** <span class="number">2.</span> <span class="keyword">row</span> ***************************</span><br><span class="line">        <span class="keyword">Table</span>: <span class="keyword">users</span></span><br><span class="line">   Non_unique: <span class="number">1</span></span><br><span class="line">     Key_name: pid</span><br><span class="line"> Seq_in_index: <span class="number">1</span></span><br><span class="line">  Column_name: pid</span><br><span class="line">    <span class="keyword">Collation</span>: A</span><br><span class="line">  Cardinality: <span class="number">0</span></span><br><span class="line">     Sub_part: <span class="literal">NULL</span></span><br><span class="line">       Packed: <span class="literal">NULL</span></span><br><span class="line">         <span class="literal">Null</span>: YES</span><br><span class="line">   Index_type: BTREE</span><br><span class="line">      <span class="keyword">Comment</span>:</span><br><span class="line">Index_comment:</span><br><span class="line"><span class="number">2</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure>

<p>一共存在两个索引  Column_name: id （主键索引）      Column_name: pid<br>主键在创建的时候会自动创建索引，外键在创建的时候也会自动创建索引。所以当参照列不是主键的时候不会自动创建索引，需要手动创建。<br>再看一下users数据表</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; SHOW CREATE TABLE users;</span><br><span class="line">+<span class="comment">-------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+</span></span><br><span class="line">| Table | <span class="keyword">Create</span> <span class="keyword">Table</span>                                                                                                                                                                                                                                                                                                            |</span><br><span class="line">+<span class="comment">-------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+</span></span><br><span class="line">| <span class="keyword">users</span> | <span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`users`</span> (</span><br><span class="line">  <span class="string">`id`</span> <span class="built_in">smallint</span>(<span class="number">5</span>) <span class="keyword">unsigned</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> AUTO_INCREMENT,</span><br><span class="line">  <span class="string">`username`</span> <span class="built_in">varchar</span>(<span class="number">10</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`pid`</span> <span class="built_in">smallint</span>(<span class="number">5</span>) <span class="keyword">unsigned</span> <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  PRIMARY <span class="keyword">KEY</span> (<span class="string">`id`</span>),</span><br><span class="line">  <span class="keyword">KEY</span> <span class="string">`pid`</span> (<span class="string">`pid`</span>),</span><br><span class="line">  <span class="keyword">CONSTRAINT</span> <span class="string">`users_ibfk_1`</span> <span class="keyword">FOREIGN</span> <span class="keyword">KEY</span> (<span class="string">`pid`</span>) <span class="keyword">REFERENCES</span> <span class="string">`provinces`</span> (<span class="string">`id`</span>)</span><br><span class="line">) <span class="keyword">ENGINE</span>=<span class="keyword">InnoDB</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8 |</span><br><span class="line">+<span class="comment">-------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+</span></span><br><span class="line"><span class="number">1</span> <span class="keyword">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure>
<p>其中 KEY <code>pid</code> (<code>pid</code>),是系统自动给我们添加的。</p>
<p>索引和存储引擎会在后面详细介绍。</p>
<h2 id="3）外键约束的参照操作"><a href="#3）外键约束的参照操作" class="headerlink" title="3）外键约束的参照操作"></a>3）外键约束的参照操作</h2><p>CASCADE:从父表删除或更新且自动删除或更新子表中匹配的行<br>SET NULL:从父表删除或更新行，并设置子表中的外键列为NULL。如果使用该选项，必须保证子表列没有指定NOT  NULL<br>RESTRICT:拒绝对父表的删除或更新操作<br>NO  ACTION:标准SQL的关键字，在MySQL中与RESTRICT相同<br>下面我们使用CASCADE做一个说明：<br>首先创建一个新的数据表和users一样,只是增加CASCADE</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; CREATE TABLE users1(</span><br><span class="line">    -&gt; id SMALLINT UNSIGNED PRIMARY KEY AUTO_INCREMENT,</span><br><span class="line">    -&gt; username VARCHAR(10) NOT NULL,</span><br><span class="line">    -&gt; pid SMALLINT UNSIGNED,</span><br><span class="line">    -&gt; FOREIGN KEY (pid) REFERENCES provinces (id) ON DELETE CASCADE</span><br><span class="line">    -&gt; );</span><br><span class="line">Query OK, 0 rows affected (0.03 sec)</span><br></pre></td></tr></table></figure>
<p>查看一下这个表</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; SHOW CREATE TABLE users1;</span><br><span class="line">+<span class="comment">--------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+</span></span><br><span class="line">| Table  | <span class="keyword">Create</span> <span class="keyword">Table</span>                                                                                                                                                                                                                                                                                                                                |</span><br><span class="line">+<span class="comment">--------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+</span></span><br><span class="line">| users1 | <span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`users1`</span> (</span><br><span class="line">  <span class="string">`id`</span> <span class="built_in">smallint</span>(<span class="number">5</span>) <span class="keyword">unsigned</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> AUTO_INCREMENT,</span><br><span class="line">  <span class="string">`username`</span> <span class="built_in">varchar</span>(<span class="number">10</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`pid`</span> <span class="built_in">smallint</span>(<span class="number">5</span>) <span class="keyword">unsigned</span> <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  PRIMARY <span class="keyword">KEY</span> (<span class="string">`id`</span>),</span><br><span class="line">  <span class="keyword">KEY</span> <span class="string">`pid`</span> (<span class="string">`pid`</span>),</span><br><span class="line">  <span class="keyword">CONSTRAINT</span> <span class="string">`users1_ibfk_1`</span> <span class="keyword">FOREIGN</span> <span class="keyword">KEY</span> (<span class="string">`pid`</span>) <span class="keyword">REFERENCES</span> <span class="string">`provinces`</span> (<span class="string">`id`</span>) <span class="keyword">ON</span> <span class="keyword">DELETE</span> <span class="keyword">CASCADE</span></span><br><span class="line">) <span class="keyword">ENGINE</span>=<span class="keyword">InnoDB</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8 |</span><br><span class="line">+<span class="comment">--------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+</span></span><br><span class="line"><span class="number">1</span> <span class="keyword">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure>
<p>其中ON DELETE CASCADE就表示父表中更新或删除记录，子表也同时更新相应的行。<br>要对users1写入记录，就必须要对其父表先写入记录。原因很简单：如果不对父表写入记录，子表的pid将无从参照。<br>对provinces写入记录</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; INSERT provinces(pname) VALUES('A');</span><br><span class="line">Query OK, 1 row affected (0.03 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; INSERT provinces(pname) VALUES('B');</span><br><span class="line">Query OK, 1 row affected (0.03 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; INSERT provinces(pname) VALUES('C');</span><br><span class="line">Query OK, 1 row affected (0.04 sec)</span><br></pre></td></tr></table></figure>
<p> 查看一下</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; SELECT * FROM provinces;</span><br><span class="line">+<span class="comment">----+-------+</span></span><br><span class="line">| id | pname |</span><br><span class="line">+<span class="comment">----+-------+</span></span><br><span class="line">|  1 | A     |</span><br><span class="line">|  2 | B     |</span><br><span class="line">|  3 | C     |</span><br><span class="line">+<span class="comment">----+-------+</span></span><br><span class="line">3 rows in <span class="keyword">set</span> (<span class="number">0.03</span> sec)</span><br></pre></td></tr></table></figure>
<p>对users1写入记录</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; INSERT users1(username,pid) VALUES('hua',1);</span><br><span class="line">Query OK, 1 row affected (0.02 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; INSERT users1(username,pid) VALUES('hui',3);</span><br><span class="line">Query OK, 1 row affected (0.04 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; INSERT users1(username,pid) VALUES('yuan',4);</span><br><span class="line">ERROR 1452 (23000): Cannot add or <span class="keyword">update</span> a <span class="keyword">child</span> <span class="keyword">row</span>: a <span class="keyword">foreign</span> <span class="keyword">key</span> <span class="keyword">constraint</span> fails (<span class="string">`test`</span>.<span class="string">`users1`</span>, <span class="keyword">CONSTRAINT</span> <span class="string">`users1_ibfk_1`</span> <span class="keyword">FOREIGN</span> <span class="keyword">KEY</span> (<span class="string">`pid`</span>) <span class="keyword">REFERENCES</span> <span class="string">`provinces`</span> (<span class="string">`id`</span>) <span class="keyword">ON</span> <span class="keyword">DELETE</span> <span class="keyword">CASCADE</span>)</span><br><span class="line">mysql&gt; <span class="keyword">INSERT</span> users1(username,pid) <span class="keyword">VALUES</span>(<span class="string">'qing'</span>,<span class="number">3</span>);</span><br><span class="line">Query OK, 1 row affected (0.04 sec)</span><br></pre></td></tr></table></figure>
<p>当我插入第三条记录时发生错误，因为父表中不存在这样的id。<br>  外键约束所关联的父表字段值必须存在，子表中才能创建。<br>查看users1中的记录</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; SELECT * FROM users1;</span><br><span class="line">+<span class="comment">----+----------+------+</span></span><br><span class="line">| id | username | pid  |</span><br><span class="line">+<span class="comment">----+----------+------+</span></span><br><span class="line">|  1 | hua      |    1 |</span><br><span class="line">|  2 | hui      |    3 |</span><br><span class="line">|  4 | qing     |    3 |</span><br><span class="line">+<span class="comment">----+----------+------+</span></span><br><span class="line">3 rows in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure>

<p>当记录没写入成功时，编号仍然会自动递增，所以是1，2，4；<br>删除父表中id=3的记录</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; DELETE FROM provinces WHERE id=3;</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br></pre></td></tr></table></figure>

<p>注意：删除操作：DELETE FROM tbname WHERE 约束条件（id =3）<br>看一下父表的记录</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; SELECT * FROM provinces;</span><br><span class="line">+<span class="comment">----+-------+</span></span><br><span class="line">| id | pname |</span><br><span class="line">+<span class="comment">----+-------+</span></span><br><span class="line">|  1 | A     |</span><br><span class="line">|  2 | B     |</span><br><span class="line">+<span class="comment">----+-------+</span></span><br><span class="line">2 rows in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure>
<p>C已经被删除。<br>看一下子表的记录</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; SELECT * FROM users1;</span><br><span class="line">+<span class="comment">----+----------+------+</span></span><br><span class="line">| id | username | pid  |</span><br><span class="line">+<span class="comment">----+----------+------+</span></span><br><span class="line">|  1 | hua      |    1 |</span><br><span class="line">+<span class="comment">----+----------+------+</span></span><br><span class="line">1 row in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure>
<p>pid为3的均被删除。</p>
<p>实际开发中不怎么使用物理外键，因为只有innodb引擎支持，通常使用逻辑外键。</p>
<p>物理外键指的是使用foreign key 作为外键关联另一张的字段的连接方法，而且限定了引擎为InnoDB,而逻辑外键，又叫做事实外键，在定义两张表时，是按照某种结构的方式去定义，不去使用foreign key 来定义。</p>
<h2 id="4）表级约束与列级约束："><a href="#4）表级约束与列级约束：" class="headerlink" title="4）表级约束与列级约束："></a>4）表级约束与列级约束：</h2><ol>
<li>对一个数据列建立的约束，称为列级约束；</li>
<li>对多个数据列建立的约束，称为表级约束；</li>
<li>列级约束既可以在列定义时声明，也可以在列定义后声明；</li>
<li>表级约束只能在列定义后声明；</li>
<li>并不是所有约束都存在表级约束。如NOT NULL 和DEFAULT约束是不存在表级约束的；<br>实际开发过程中，很少使用表级约束。<h2 id="5）修改数据表"><a href="#5）修改数据表" class="headerlink" title="5）修改数据表"></a>5）修改数据表</h2><h3 id="添加列"><a href="#添加列" class="headerlink" title="添加列"></a>添加列</h3>ALTER TABLE table_name ADD [COLUMN] column_name column_definition [FIRST | AFTER column_name]</li>
</ol>
<p>FIRST :添加到列的第一个位置<br>AFTER column_name：在指定列的后面<br>默认添加到最后。<br>现在我们来实战演练一下，列的添加。<br>先看一个users1的列信息</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; SHOW COLUMNS FROM users1;</span><br><span class="line">+<span class="comment">----------+----------------------+------+-----+---------+----------------+</span></span><br><span class="line">| Field    | Type                 | Null | Key | Default | Extra          |</span><br><span class="line">+<span class="comment">----------+----------------------+------+-----+---------+----------------+</span></span><br><span class="line">| id       | smallint(5) unsigned | NO   | PRI | NULL    | auto_increment |</span><br><span class="line">| username | varchar(10)          | NO   |     | NULL    |                |</span><br><span class="line">| pid      | smallint(5) unsigned | YES  | MUL | NULL    |                |</span><br><span class="line">+<span class="comment">----------+----------------------+------+-----+---------+----------------+</span></span><br><span class="line">3 rows in <span class="keyword">set</span> (<span class="number">0.04</span> sec)</span><br></pre></td></tr></table></figure>
<p>接下来添加一列</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; ALTER TABLE users1 ADD age TINYINT UNSIGNED NOT NULL DEFAULT 10;</span><br><span class="line">Query OK, 1 row affected (0.05 sec)</span><br><span class="line">Records: 1  Duplicates: 0  Warnings: 0</span><br></pre></td></tr></table></figure>
<p>查看一下数据表结构</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; SHOW COLUMNS FROM users1;</span><br><span class="line">+<span class="comment">----------+----------------------+------+-----+---------+----------------+</span></span><br><span class="line">| Field    | Type                 | Null | Key | Default | Extra          |</span><br><span class="line">+<span class="comment">----------+----------------------+------+-----+---------+----------------+</span></span><br><span class="line">| id       | smallint(5) unsigned | NO   | PRI | NULL    | auto_increment |</span><br><span class="line">| username | varchar(10)          | NO   |     | NULL    |                |</span><br><span class="line">| pid      | smallint(5) unsigned | YES  | MUL | NULL    |                |</span><br><span class="line">| age      | tinyint(3) unsigned  | NO   |     | 10      |                |</span><br><span class="line">+<span class="comment">----------+----------------------+------+-----+---------+----------------+</span></span><br><span class="line">4 rows in <span class="keyword">set</span> (<span class="number">0.04</span> sec)</span><br></pre></td></tr></table></figure>
<p>可以看出默认插入到最后一列。<br>再使用FIRST插入一列</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; ALTER TABLE users1 ADD password VARCHAR(20) NOT NULL FIRST;</span><br><span class="line">Query OK, 1 row affected (0.05 sec)</span><br><span class="line">Records: 1  Duplicates: 0  Warnings: 0</span><br></pre></td></tr></table></figure>
<p>再次查看数据表结构就会发现，password在第一例的位置。这里不再演示。<br>使用AFTER插入一列</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; ALTER TABLE users1 ADD habital VARCHAR(20) NOT NULL AFTER username;</span><br><span class="line">Query OK, 1 row affected (0.04 sec)</span><br><span class="line">Records: 1  Duplicates: 0  Warnings: 0</span><br></pre></td></tr></table></figure>
<p>habital被添加在username的后面。</p>
<p><strong>添加多列</strong><br>ALTER TABLE tbl_name ADD [COLUMN] (col_name column_definiton,…)<br>和添加一列基本类似，不再操作。需要注意的是，添加多列时，不能指定位置，只能在列尾添加。</p>
<h3 id="删除列"><a href="#删除列" class="headerlink" title="删除列"></a>删除列</h3><p>ALTER TABLE tbl_name DROP [COLUMN] col_name<br>如：ALTER TABLE user1 DROP truename;删除表user1的truename单列<br>如：ALTER TABLE user1 DROP password,DROP age;删除多列，用逗号分隔开<br>删除password列</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; ALTER TABLE users1 DROP password;</span><br><span class="line">Query OK, 1 row affected (0.05 sec)</span><br><span class="line">Records: 1  Duplicates: 0  Warnings: 0</span><br></pre></td></tr></table></figure>
<p>查看一下：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; SHOW COLUMNS FROM users1;</span><br><span class="line">+<span class="comment">----------+----------------------+------+-----+---------+----------------+</span></span><br><span class="line">| Field    | Type                 | Null | Key | Default | Extra          |</span><br><span class="line">+<span class="comment">----------+----------------------+------+-----+---------+----------------+</span></span><br><span class="line">| id       | smallint(5) unsigned | NO   | PRI | NULL    | auto_increment |</span><br><span class="line">| username | varchar(10)          | NO   |     | NULL    |                |</span><br><span class="line">| habital  | varchar(20)          | NO   |     | NULL    |                |</span><br><span class="line">| pid      | smallint(5) unsigned | YES  | MUL | NULL    |                |</span><br><span class="line">| age      | tinyint(3) unsigned  | NO   |     | 10      |                |</span><br><span class="line">+<span class="comment">----------+----------------------+------+-----+---------+----------------+</span></span><br></pre></td></tr></table></figure>

<p>如果我想删除多列呢？<br>删除多列，通过“,”隔开即可</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; ALTER TABLE users1 DROP age,DROP habital;</span><br><span class="line">Query OK, 1 row affected (0.03 sec)</span><br><span class="line">Records: 1  Duplicates: 0  Warnings: 0</span><br></pre></td></tr></table></figure>
<p>再查看一下吧</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; SHOW COLUMNS FROM users1;</span><br><span class="line">+<span class="comment">----------+----------------------+------+-----+---------+----------------+</span></span><br><span class="line">| Field    | Type                 | Null | Key | Default | Extra          |</span><br><span class="line">+<span class="comment">----------+----------------------+------+-----+---------+----------------+</span></span><br><span class="line">| id       | smallint(5) unsigned | NO   | PRI | NULL    | auto_increment |</span><br><span class="line">| username | varchar(10)          | NO   |     | NULL    |                |</span><br><span class="line">| pid      | smallint(5) unsigned | YES  | MUL | NULL    |                |</span><br><span class="line">+<span class="comment">----------+----------------------+------+-----+---------+----------------+</span></span><br><span class="line">3 rows in <span class="keyword">set</span> (<span class="number">0.04</span> sec)</span><br></pre></td></tr></table></figure>

<h2 id="6）添加约束"><a href="#6）添加约束" class="headerlink" title="6）添加约束"></a>6）添加约束</h2><p>当约束不够时，如何增加约束？或者如何删除约束？<br>为此，我们先创建一个新的数据表：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; CREATE TABLE users2(</span><br><span class="line">    -&gt; username VARCHAR(20) NOT NULL,</span><br><span class="line">    -&gt; id SMALLINT UNSIGNED,</span><br><span class="line">    -&gt; pid TINYINT UNSIGNED</span><br><span class="line">    -&gt; );</span><br><span class="line">Query OK, 0 rows affected (0.05 sec)</span><br></pre></td></tr></table></figure>

<h3 id="添加主键约束"><a href="#添加主键约束" class="headerlink" title="添加主键约束"></a>添加主键约束</h3><p>ALTER TABLE tbl_name ADD [CONSTRAINT [symbol]] PRIMARYKEY  [index_type] (index_col_name,…)<br>CONSTRAINT 可以添加也可以不添加，如果添加可以起个名字。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; ALTER TABLE users2 ADD CONSTRAINT PK_users2_id PRIMARY KEY (id);</span><br><span class="line">Query OK, 0 rows affected (0.04 sec)</span><br><span class="line">Records: 0  Duplicates: 0  Warnings: 0</span><br></pre></td></tr></table></figure>
<p>再来看一下数据表的结构：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; SHOW COLUMNS FROM users2;</span><br><span class="line">+<span class="comment">----------+----------------------+------+-----+---------+-------+</span></span><br><span class="line">| Field    | Type                 | Null | Key | Default | Extra |</span><br><span class="line">+<span class="comment">----------+----------------------+------+-----+---------+-------+</span></span><br><span class="line">| username | varchar(20)          | NO   |     | NULL    |       |</span><br><span class="line">| id       | smallint(5) unsigned | NO   | PRI | 0       |       |</span><br><span class="line">| pid      | tinyint(3) unsigned  | YES  |     | NULL    |       |</span><br><span class="line">+<span class="comment">----------+----------------------+------+-----+---------+-------+</span></span><br><span class="line">3 rows in <span class="keyword">set</span> (<span class="number">0.05</span> sec)</span><br></pre></td></tr></table></figure>
<p>可以看到id已经变为主键约束。</p>
<h3 id="添加唯一约束"><a href="#添加唯一约束" class="headerlink" title="添加唯一约束"></a>添加唯一约束</h3><p>ALTER TABLE tbl_name ADD [CONSTRAINT [symbol]] UNIQUE [INDEX|KEY] [index_name] [index_type] (index_col_name,…)<br>与主键约束不同的是唯一约束可以有多个。<br>下面我们给pid添加一个唯一约束：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; ALTER TABLE users2 ADD UNIQUE (pid);</span><br><span class="line">Query OK, 0 rows affected (0.04 sec)</span><br><span class="line">Records: 0  Duplicates: 0  Warnings: 0</span><br></pre></td></tr></table></figure>
<p>检查一下数据表结构:</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; SHOW COLUMNS FROM users2;</span><br><span class="line">+<span class="comment">----------+----------------------+------+-----+---------+-------+</span></span><br><span class="line">| Field    | Type                 | Null | Key | Default | Extra |</span><br><span class="line">+<span class="comment">----------+----------------------+------+-----+---------+-------+</span></span><br><span class="line">| username | varchar(20)          | NO   |     | NULL    |       |</span><br><span class="line">| id       | smallint(5) unsigned | NO   | PRI | 0       |       |</span><br><span class="line">| pid      | tinyint(3) unsigned  | YES  | UNI | NULL    |       |</span><br><span class="line">+<span class="comment">----------+----------------------+------+-----+---------+-------+</span></span><br><span class="line">3 rows in <span class="keyword">set</span> (<span class="number">0.04</span> sec)</span><br></pre></td></tr></table></figure>

<p>pid已经被设置为唯一约束。</p>
<h3 id="添加外键约束"><a href="#添加外键约束" class="headerlink" title="添加外键约束"></a>添加外键约束</h3><p>ALTER TABLE tb1_name ADD  [CONSTRAINT [symbol]]  FOREIGN KEY [index_name] [index_type] (index_col_name,…)  reference_definition;<br>首先看一下要设置的父表的结构（还是我们之前的provinces）：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; SHOW COLUMNS FROM provinces;</span><br><span class="line">+<span class="comment">-------+----------------------+------+-----+---------+----------------+</span></span><br><span class="line">| Field | Type                 | Null | Key | Default | Extra          |</span><br><span class="line">+<span class="comment">-------+----------------------+------+-----+---------+----------------+</span></span><br><span class="line">| id    | smallint(5) unsigned | NO   | PRI | NULL    | auto_increment |</span><br><span class="line">| pname | varchar(20)          | NO   |     | NULL    |                |</span><br><span class="line">+<span class="comment">-------+----------------------+------+-----+---------+----------------+</span></span><br><span class="line">2 rows in <span class="keyword">set</span> (<span class="number">0.04</span> sec)</span><br></pre></td></tr></table></figure>

<p>添加一个和id类型一样的列：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; ALTER TABLE users2 ADD cid SMALLINT UNSIGNED;</span><br><span class="line">Query OK, 0 rows affected (0.01 sec)</span><br><span class="line">Records: 0  Duplicates: 0  Warnings: 0</span><br></pre></td></tr></table></figure>
<p>接下来设置username的外键约束：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; ALTER TABLE users2 ADD FOREIGN KEY (cid) REFERENCES provinces (id);</span><br><span class="line">Query OK, 0 rows affected (0.05 sec)</span><br><span class="line">Records: 0  Duplicates: 0  Warnings: 0</span><br></pre></td></tr></table></figure>
<p>查看一下：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; SHOW CREATE TABLE users2;</span><br><span class="line">+<span class="comment">--------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+</span></span><br><span class="line">| Table  | <span class="keyword">Create</span> <span class="keyword">Table</span>                                                                                                                                                                                                                                                                                                                                                                                 |</span><br><span class="line">+<span class="comment">--------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+</span></span><br><span class="line">| users2 | <span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`users2`</span> (</span><br><span class="line">  <span class="string">`username`</span> <span class="built_in">varchar</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`id`</span> <span class="built_in">smallint</span>(<span class="number">5</span>) <span class="keyword">unsigned</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">'0'</span>,</span><br><span class="line">  <span class="string">`pid`</span> <span class="built_in">tinyint</span>(<span class="number">3</span>) <span class="keyword">unsigned</span> <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`cid`</span> <span class="built_in">smallint</span>(<span class="number">5</span>) <span class="keyword">unsigned</span> <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  PRIMARY <span class="keyword">KEY</span> (<span class="string">`id`</span>),</span><br><span class="line">  <span class="keyword">UNIQUE</span> <span class="keyword">KEY</span> <span class="string">`pid`</span> (<span class="string">`pid`</span>),</span><br><span class="line">  <span class="keyword">KEY</span> <span class="string">`cid`</span> (<span class="string">`cid`</span>),</span><br><span class="line">  <span class="keyword">CONSTRAINT</span> <span class="string">`users2_ibfk_1`</span> <span class="keyword">FOREIGN</span> <span class="keyword">KEY</span> (<span class="string">`cid`</span>) <span class="keyword">REFERENCES</span> <span class="string">`provinces`</span> (<span class="string">`id`</span>)</span><br><span class="line">) <span class="keyword">ENGINE</span>=<span class="keyword">InnoDB</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8 |</span><br><span class="line">+<span class="comment">--------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+</span></span><br><span class="line"><span class="number">1</span> <span class="keyword">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure>

<p>cid已经被设置为外键约束。</p>
<h3 id="添加-删除默认约束"><a href="#添加-删除默认约束" class="headerlink" title="添加/删除默认约束"></a>添加/删除默认约束</h3><p>ALTER TABLE tbl_name ALTER[COLUMN] col_name{SET DEFAULT literal|DROP DEFAULT}</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; ALTER TABLE users2 ALTER COLUMN username SET DEFAULT 'pp';</span><br><span class="line">Query OK, 0 rows affected (0.03 sec)</span><br><span class="line">Records: 0  Duplicates: 0  Warnings: 0</span><br></pre></td></tr></table></figure>
<p>查看列信息：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; SHOW COLUMNS FROM users2;</span><br><span class="line">+<span class="comment">----------+----------------------+------+-----+---------+-------+</span></span><br><span class="line">| Field    | Type                 | Null | Key | Default | Extra |</span><br><span class="line">+<span class="comment">----------+----------------------+------+-----+---------+-------+</span></span><br><span class="line">| username | varchar(20)          | NO   |     | pp      |       |</span><br><span class="line">| id       | smallint(5) unsigned | NO   | PRI | 0       |       |</span><br><span class="line">| pid      | tinyint(3) unsigned  | YES  | UNI | NULL    |       |</span><br><span class="line">| cid      | smallint(5) unsigned | YES  | MUL | NULL    |       |</span><br><span class="line">+<span class="comment">----------+----------------------+------+-----+---------+-------+</span></span><br><span class="line">4 rows in <span class="keyword">set</span> (<span class="number">0.04</span> sec)</span><br></pre></td></tr></table></figure>

<p>username的默认值被设置为‘pp’。</p>
<p>下面删除默认约束：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; ALTER TABLE users2 ALTER COLUMN username DROP DEFAULT;</span><br><span class="line">Query OK, 0 rows affected (0.03 sec)</span><br><span class="line">Records: 0  Duplicates: 0  Warnings: 0</span><br></pre></td></tr></table></figure>
<p>看下是否被删除：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; SHOW COLUMNS FROM users2;</span><br><span class="line">+<span class="comment">----------+----------------------+------+-----+---------+-------+</span></span><br><span class="line">| Field    | Type                 | Null | Key | Default | Extra |</span><br><span class="line">+<span class="comment">----------+----------------------+------+-----+---------+-------+</span></span><br><span class="line">| username | varchar(20)          | NO   |     | NULL    |       |</span><br><span class="line">| id       | smallint(5) unsigned | NO   | PRI | 0       |       |</span><br><span class="line">| pid      | tinyint(3) unsigned  | YES  | UNI | NULL    |       |</span><br><span class="line">| cid      | smallint(5) unsigned | YES  | MUL | NULL    |       |</span><br><span class="line">+<span class="comment">----------+----------------------+------+-----+---------+-------+</span></span><br><span class="line">4 rows in <span class="keyword">set</span> (<span class="number">0.04</span> sec)</span><br></pre></td></tr></table></figure>
<p>大功告成！</p>
<h2 id="7）删除约束"><a href="#7）删除约束" class="headerlink" title="7）删除约束"></a>7）删除约束</h2><h3 id="删除主键约束"><a href="#删除主键约束" class="headerlink" title="删除主键约束"></a>删除主键约束</h3><p>ALTER TABLE tbl_name DROP PRIMARY KEY<br>不需要指定名称，因为一张表只有一个主键</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; ALTER TABLE users2 DROP PRIMARY KEY;</span><br><span class="line">Query OK, 0 rows affected (0.05 sec)</span><br><span class="line">Records: 0  Duplicates: 0  Warnings: 0</span><br></pre></td></tr></table></figure>
<p>查看一下：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; SHOW COLUMNS FROM users2;</span><br><span class="line">+<span class="comment">----------+----------------------+------+-----+---------+-------+</span></span><br><span class="line">| Field    | Type                 | Null | Key | Default | Extra |</span><br><span class="line">+<span class="comment">----------+----------------------+------+-----+---------+-------+</span></span><br><span class="line">| username | varchar(20)          | NO   |     | NULL    |       |</span><br><span class="line">| id       | smallint(5) unsigned | NO   |     | 0       |       |</span><br><span class="line">| pid      | tinyint(3) unsigned  | YES  | UNI | NULL    |       |</span><br><span class="line">| cid      | smallint(5) unsigned | YES  | MUL | NULL    |       |</span><br><span class="line">+<span class="comment">----------+----------------------+------+-----+---------+-------+</span></span><br><span class="line">4 rows in <span class="keyword">set</span> (<span class="number">0.05</span> sec)</span><br></pre></td></tr></table></figure>

<h3 id="删除唯一约束"><a href="#删除唯一约束" class="headerlink" title="删除唯一约束"></a>删除唯一约束</h3><p>ALTER TABLE tbl_name DROP {INDEX|KEY} index_name<br>需要指定名称，因为一张表可以有多个唯一约束<br>我们接下来要删除的是唯一约束，所以首先我们应该查看约束的名字：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; SHOW INDEXES FROM users2\G;</span><br><span class="line">*************************** 1. row ***************************</span><br><span class="line">        Table: users2</span><br><span class="line">   Non_unique: 0</span><br><span class="line">     Key_name: pid</span><br><span class="line"> Seq_in_index: 1</span><br><span class="line">  Column_name: pid</span><br><span class="line">    Collation: A</span><br><span class="line">  Cardinality: 0</span><br><span class="line">     Sub_part: NULL</span><br><span class="line">       Packed: NULL</span><br><span class="line">         Null: YES</span><br><span class="line">   Index_type: BTREE</span><br><span class="line">      <span class="keyword">Comment</span>:</span><br><span class="line">Index_comment:</span><br><span class="line">*************************** <span class="number">2.</span> <span class="keyword">row</span> ***************************</span><br><span class="line">        <span class="keyword">Table</span>: users2</span><br><span class="line">   Non_unique: <span class="number">1</span></span><br><span class="line">     Key_name: cid</span><br><span class="line"> Seq_in_index: <span class="number">1</span></span><br><span class="line">  Column_name: cid</span><br><span class="line">    <span class="keyword">Collation</span>: A</span><br><span class="line">  Cardinality: <span class="number">0</span></span><br><span class="line">     Sub_part: <span class="literal">NULL</span></span><br><span class="line">       Packed: <span class="literal">NULL</span></span><br><span class="line">         <span class="literal">Null</span>: YES</span><br><span class="line">   Index_type: BTREE</span><br><span class="line">      <span class="keyword">Comment</span>:</span><br><span class="line">Index_comment:</span><br><span class="line"><span class="number">2</span> <span class="keyword">rows</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line"><span class="keyword">ERROR</span>:</span><br><span class="line"><span class="keyword">No</span> <span class="keyword">query</span> specified</span><br></pre></td></tr></table></figure>
<p>删除pid的约束：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; ALTER TABLE users2 DROP KEY pid;</span><br><span class="line">Query OK, 0 rows affected (0.03 sec)</span><br><span class="line">Records: 0  Duplicates: 0  Warnings: 0</span><br></pre></td></tr></table></figure>
<p>现在只剩下一个约束：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; SHOW INDEXES FROM users2\G;</span><br><span class="line">*************************** 1. row ***************************</span><br><span class="line">        Table: users2</span><br><span class="line">   Non_unique: 1</span><br><span class="line">     Key_name: cid</span><br><span class="line"> Seq_in_index: 1</span><br><span class="line">  Column_name: cid</span><br><span class="line">    Collation: A</span><br><span class="line">  Cardinality: 0</span><br><span class="line">     Sub_part: NULL</span><br><span class="line">       Packed: NULL</span><br><span class="line">         Null: YES</span><br><span class="line">   Index_type: BTREE</span><br><span class="line">      <span class="keyword">Comment</span>:</span><br><span class="line">Index_comment:</span><br><span class="line"><span class="number">1</span> <span class="keyword">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line"><span class="keyword">ERROR</span>:</span><br><span class="line"><span class="keyword">No</span> <span class="keyword">query</span> specified</span><br></pre></td></tr></table></figure>
<h3 id="删除外键约束"><a href="#删除外键约束" class="headerlink" title="删除外键约束"></a>删除外键约束</h3><p>ALTER TABLE tbl_name DROP FOREIGN KEY fk_symbol<br>要想删除外键约束，必须知道外键约束的名字；</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; SHOW CREATE TABLE users2;</span><br><span class="line">+<span class="comment">--------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+</span></span><br><span class="line">| Table  | <span class="keyword">Create</span> <span class="keyword">Table</span>                                                                                                                                                                                                                                                                                                                               |</span><br><span class="line">+<span class="comment">--------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+</span></span><br><span class="line">| users2 | <span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`users2`</span> (</span><br><span class="line">  <span class="string">`username`</span> <span class="built_in">varchar</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`id`</span> <span class="built_in">smallint</span>(<span class="number">5</span>) <span class="keyword">unsigned</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">'0'</span>,</span><br><span class="line">  <span class="string">`pid`</span> <span class="built_in">tinyint</span>(<span class="number">3</span>) <span class="keyword">unsigned</span> <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`cid`</span> <span class="built_in">smallint</span>(<span class="number">5</span>) <span class="keyword">unsigned</span> <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="keyword">KEY</span> <span class="string">`cid`</span> (<span class="string">`cid`</span>),</span><br><span class="line">  <span class="keyword">CONSTRAINT</span> <span class="string">`users2_ibfk_1`</span> <span class="keyword">FOREIGN</span> <span class="keyword">KEY</span> (<span class="string">`cid`</span>) <span class="keyword">REFERENCES</span> <span class="string">`provinces`</span> (<span class="string">`id`</span>)</span><br><span class="line">) <span class="keyword">ENGINE</span>=<span class="keyword">InnoDB</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8 |</span><br><span class="line">+<span class="comment">--------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+</span></span><br><span class="line"><span class="number">1</span> <span class="keyword">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure>

<p>可以得到外键的名字为 users2_ibfk_1<br>下面进行删除：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; ALTER TABLE users2 DROP FOREIGN KEY users2_ibfk_1;</span><br><span class="line">Query OK, 0 rows affected (0.05 sec)</span><br><span class="line">Records: 0  Duplicates: 0  Warnings: 0</span><br></pre></td></tr></table></figure>
<p>查看：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; SHOW CREATE TABLE users2;</span><br><span class="line">+<span class="comment">--------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+</span></span><br><span class="line">| Table  | <span class="keyword">Create</span> <span class="keyword">Table</span>                                                                                                                                                                                                                                               |</span><br><span class="line">+<span class="comment">--------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+</span></span><br><span class="line">| users2 | <span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`users2`</span> (</span><br><span class="line">  <span class="string">`username`</span> <span class="built_in">varchar</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`id`</span> <span class="built_in">smallint</span>(<span class="number">5</span>) <span class="keyword">unsigned</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">'0'</span>,</span><br><span class="line">  <span class="string">`pid`</span> <span class="built_in">tinyint</span>(<span class="number">3</span>) <span class="keyword">unsigned</span> <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`cid`</span> <span class="built_in">smallint</span>(<span class="number">5</span>) <span class="keyword">unsigned</span> <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="keyword">KEY</span> <span class="string">`cid`</span> (<span class="string">`cid`</span>)</span><br><span class="line">) <span class="keyword">ENGINE</span>=<span class="keyword">InnoDB</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8 |</span><br><span class="line">+<span class="comment">--------+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+</span></span><br><span class="line"><span class="number">1</span> <span class="keyword">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.01</span> sec)</span><br></pre></td></tr></table></figure>

<p>可以看到cid还是存在索引的，如果不想要还可以进一步进行删除：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; ALTER TABLE users2 DROP KEY cid;</span><br><span class="line">Query OK, 0 rows affected (0.04 sec)</span><br><span class="line">Records: 0  Duplicates: 0  Warnings: 0</span><br></pre></td></tr></table></figure>
<p>再来查看一下:</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; SHOW CREATE TABLE users2;</span><br><span class="line">+<span class="comment">--------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+</span></span><br><span class="line">| Table  | <span class="keyword">Create</span> <span class="keyword">Table</span>                                                                                                                                                                                                                          |</span><br><span class="line">+<span class="comment">--------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+</span></span><br><span class="line">| users2 | <span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`users2`</span> (</span><br><span class="line">  <span class="string">`username`</span> <span class="built_in">varchar</span>(<span class="number">20</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`id`</span> <span class="built_in">smallint</span>(<span class="number">5</span>) <span class="keyword">unsigned</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">'0'</span>,</span><br><span class="line">  <span class="string">`pid`</span> <span class="built_in">tinyint</span>(<span class="number">3</span>) <span class="keyword">unsigned</span> <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`cid`</span> <span class="built_in">smallint</span>(<span class="number">5</span>) <span class="keyword">unsigned</span> <span class="keyword">DEFAULT</span> <span class="literal">NULL</span></span><br><span class="line">) <span class="keyword">ENGINE</span>=<span class="keyword">InnoDB</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8 |</span><br><span class="line">+<span class="comment">--------+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+</span></span><br><span class="line"><span class="number">1</span> <span class="keyword">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure>
<p>cid的索引已经删除。</p>
<h2 id="8）修改列定义和更名数据表"><a href="#8）修改列定义和更名数据表" class="headerlink" title="8）修改列定义和更名数据表"></a>8）修改列定义和更名数据表</h2><h3 id="修改列定义"><a href="#修改列定义" class="headerlink" title="修改列定义"></a>修改列定义</h3><p>（列名字不存在问题，列的类型或者位置可能存在问题）<br>ALTER TABLE tbl_name MODIFY [COLUMN] col_name colunm_definition   [FIRST | AFTER col_name]</p>
<h3 id="修改列名称"><a href="#修改列名称" class="headerlink" title="修改列名称"></a>修改列名称</h3><p>（既可以修改列定义，也可以修改列名称）<br>ALTER TABLE tbl_name CHANGE [COLUMN] old_col_name new_col_name column_definition  [FIRST|AFTER col_name]</p>
<h3 id="数据表更名"><a href="#数据表更名" class="headerlink" title="数据表更名"></a>数据表更名</h3><p>（列名称和数据表名称尽量不要改动，因为实际使用中可能会有关联，导致存储过程出现问题）<br>方法1<br>ALTER TABLE tbl_name RENAME [TO|AS] new_tbl_name<br>方法2（可以修改多张表的名称）<br>RENAME TABLE tbl_name TO new_tbl_name [,tbl_name2 TO new_tbl_name2]…</p>
<h1 id="小结："><a href="#小结：" class="headerlink" title="小结："></a>小结：</h1><p><strong>约束按照功能来划分</strong>：<br>not null（非空约束）<br>primary key（主键约束）<br>unique key（唯一约束）<br>default（默认约束）<br>foreign key（外键约束）<br><strong>按照数据列的数目划分</strong>：<br>表级约束<br>列级约束<br><strong>修改数据表的操作</strong>：<br>针对字段的操作：添加/删除字段。修改列定义，修改列名称<br>针对约束的操作：添加/删除约束<br>针对数据表的操作：数据表更名（两种方式）</p>
]]></content>
      <categories>
        <category>数据库</category>
      </categories>
      <tags>
        <tag>MySQL</tag>
        <tag>数据库</tag>
      </tags>
  </entry>
  <entry>
    <title>第二章 数据类型和操作数据表</title>
    <url>/2019/12/14/%E7%AC%AC%E4%BA%8C%E7%AB%A0%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%92%8C%E6%93%8D%E4%BD%9C%E6%95%B0%E6%8D%AE%E8%A1%A8/</url>
    <content><![CDATA[<p>  本章介绍一些常用的数据类型以及如何操作数据表。</p>
<a id="more"></a> 
<h1 id="1-数据类型"><a href="#1-数据类型" class="headerlink" title="1. 数据类型"></a>1. 数据类型</h1><h2 id="1）定义："><a href="#1）定义：" class="headerlink" title="1）定义："></a>1）定义：</h2><p>  数据类型是指列、存储过程参数、表达式和局部变量的数据特征，它决定了数据的存储格式，代表了不同的信息类型。</p>
<h2 id="2）整型"><a href="#2）整型" class="headerlink" title="2）整型"></a>2）整型</h2><p>五种整形数据类型：<br>TINYINT（一个字节）       有符号值： -128 – 127   无符号值：0 – 255<br>SMALLINT（两个字节）      有符号值： -32768 – 32767   无符号值：0 – 65536<br>MEDIUMINT（三个字节）     有符号值： -8388608 – 8388607   无符号值：0 – 16777215<br>INT（四个字节）                          更大<br>BIGINT（八个字节）                       最大<br>数据库的优化第一步是要选择合适的数据类型，避免不必要的浪费</p>
<h2 id="3）浮点型"><a href="#3）浮点型" class="headerlink" title="3）浮点型"></a>3）浮点型</h2><p>FLOAT[(M,D)]:    单精度浮点型<br>DOUBLE[(M,D)]:   双精度浮点型<br>M是数字总位数，D是小数位数。</p>
<h2 id="4）日期时间型"><a href="#4）日期时间型" class="headerlink" title="4）日期时间型"></a>4）日期时间型</h2><p>DATE:        支持1000年1月1号——9999年12月31号。<br>DATETIME：   支持1000年1月1号0点——9999年12月31号23点59分59秒。<br>TIMESTAMP（时间戳）:  1970年1月1号0点——2037年。<br>考虑到跨时区的问题，很多时候采用数字取代日期时间类型。</p>
<h2 id="5-字符型"><a href="#5-字符型" class="headerlink" title="5) 字符型"></a>5) 字符型</h2><p>CHAR(M):定长类型，数据不足指定字节数，补空格；  M表示字节数<br>VARCHAR(M):变长类型，数据的字节就是存储的字节； M表示最大的字节数<br>ENUM(‘value1’,;value2’,…..)枚举值，集合中只能选一个；<br>SET(‘value1’,;value2’,…..)集合，在集合中做任意的排列组合，可以选一个值，也可以两个或更多。<br>还有一些：TINYTEXT,TEXY,MEDIUMTEXT.LONGTEXT</p>
<h1 id="2-数据表"><a href="#2-数据表" class="headerlink" title="2.数据表"></a>2.数据表</h1><h2 id="1）定义"><a href="#1）定义" class="headerlink" title="1）定义"></a>1）定义</h2><p>数据表（或称表）是数据库最重要的组成部分之一，是其它对象的基础。</p>
<p>下面我们来创建一个数据表：</p>
<h2 id="1）打开数据库"><a href="#1）打开数据库" class="headerlink" title="1）打开数据库"></a>1）打开数据库</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">C:\Windows\system32&gt;net start mysql</span><br><span class="line">MySQL 服务正在启动 .</span><br><span class="line">MySQL 服务已经启动成功。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">C:\Windows\system32&gt;mysql -uroot -p</span><br><span class="line">Enter password: ****</span><br><span class="line">Welcome to the MySQL monitor.  Commands <span class="keyword">end</span> <span class="keyword">with</span> ; or \g.</span><br><span class="line">Your MySQL connection id is 2</span><br><span class="line">Server version: 5.5.62 MySQL Community Server (GPL)</span><br><span class="line"></span><br><span class="line">Copyright (c) 2000, 2018, Oracle and/or its affiliates. All rights reserved.</span><br><span class="line"></span><br><span class="line">Oracle is a registered trademark of Oracle Corporation and/or its</span><br><span class="line">affiliates. Other names may be trademarks of their respective</span><br><span class="line">owners.</span><br><span class="line"></span><br><span class="line">Type '<span class="keyword">help</span>;' or '\h' for help. <span class="keyword">Type</span> <span class="string">'\c'</span> <span class="keyword">to</span> <span class="keyword">clear</span> the <span class="keyword">current</span> <span class="keyword">input</span> statement.</span><br></pre></td></tr></table></figure>


<h2 id="2）首先看一下有哪些数据库"><a href="#2）首先看一下有哪些数据库" class="headerlink" title="2）首先看一下有哪些数据库"></a>2）首先看一下有哪些数据库</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; SHOW DATABASES;</span><br><span class="line">+<span class="comment">--------------------+</span></span><br><span class="line">| Database           |</span><br><span class="line">+<span class="comment">--------------------+</span></span><br><span class="line">| information_schema |</span><br><span class="line">| mysql              |</span><br><span class="line">| performance_schema |</span><br><span class="line">| t1                 |</span><br><span class="line">| test               |</span><br><span class="line">+<span class="comment">--------------------+</span></span><br></pre></td></tr></table></figure>

<h2 id="3）下面我们在test数据库中创建数据表，首先打开test数据库"><a href="#3）下面我们在test数据库中创建数据表，首先打开test数据库" class="headerlink" title="3）下面我们在test数据库中创建数据表，首先打开test数据库"></a>3）下面我们在test数据库中创建数据表，首先打开test数据库</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; USE test;</span><br><span class="line">Database changed</span><br></pre></td></tr></table></figure>

<p>怎么证明当前数据库就是我们打开的test数据库呢？<br>有一个简单的方法：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; SELECT DATABASE();</span><br><span class="line">+<span class="comment">------------+</span></span><br><span class="line">| DATABASE() |</span><br><span class="line">+<span class="comment">------------+</span></span><br><span class="line">| test       |</span><br><span class="line">+<span class="comment">------------+</span></span><br></pre></td></tr></table></figure>
<h2 id="4）创建数据表"><a href="#4）创建数据表" class="headerlink" title="4）创建数据表"></a>4）创建数据表</h2><p>创建数据表:<br>CREATE TABLE [IF NOT EXISTC] table_name(<br>column_name data_type, //colum_namhe是列名称，data_type是数据类型<br>…如：//username VARCHAR(20),20指长度<br>//age TINYINT UNSIGNED(意思是无负数，从0开始),<br>)；<br>注意在数据库中 CREATE TABLE 是必须要有的；而[IF NOT EXISTC]<br>是表示可加可不加，如果数据表已创建且再加上[IF NOT EXISTS]再创建<br>系统不会报错</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; CREATE TABLE  tb1(</span><br><span class="line">    -&gt; username VARCHAR(20),</span><br><span class="line">    -&gt; age TINYINT UNSIGNED,</span><br><span class="line">    -&gt; salary FLOAT(8,2) UNSIGNED</span><br><span class="line">    -&gt; );</span><br><span class="line">Query OK, 0 rows affected (0.04 sec)</span><br></pre></td></tr></table></figure>

<p>此表只是演示，不具备实际意义。</p>
<h2 id="5-验证数据表是否真实存在"><a href="#5-验证数据表是否真实存在" class="headerlink" title="5) 验证数据表是否真实存在"></a>5) 验证数据表是否真实存在</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SHOW</span> <span class="keyword">TABLES</span> ;</span><br><span class="line">mysql&gt; SHOW TABLES;</span><br><span class="line">+<span class="comment">----------------+</span></span><br><span class="line">| Tables_in_test |</span><br><span class="line">+<span class="comment">----------------+</span></span><br><span class="line">| tb1            |</span><br><span class="line">+<span class="comment">----------------+</span></span><br><span class="line">1 row in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure>
<p>可以看出tb1已经存在。<br>当然我们不仅可以查看当前数据库中的列表，还可以查看其它数据库的列表，比如我们查看MySQL中的全部数据表：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; SHOW TABLES FROM mysql;</span><br><span class="line">+<span class="comment">---------------------------+</span></span><br><span class="line">| Tables_in_mysql           |</span><br><span class="line">+<span class="comment">---------------------------+</span></span><br><span class="line">| columns_priv              |</span><br><span class="line">| db                        |</span><br><span class="line">| event                     |</span><br><span class="line">| func                      |</span><br><span class="line">| general_log               |</span><br><span class="line">| help_category             |</span><br><span class="line">| help_keyword              |</span><br><span class="line">| help_relation             |</span><br><span class="line">| help_topic                |</span><br><span class="line">| host                      |</span><br><span class="line">| ndb_binlog_index          |</span><br><span class="line">| plugin                    |</span><br><span class="line">| proc                      |</span><br><span class="line">| procs_priv                |</span><br><span class="line">| proxies_priv              |</span><br><span class="line">| servers                   |</span><br><span class="line">| slow_log                  |</span><br><span class="line">| tables_priv               |</span><br><span class="line">| time_zone                 |</span><br><span class="line">| time_zone_leap_second     |</span><br><span class="line">| time_zone_name            |</span><br><span class="line">| time_zone_transition      |</span><br><span class="line">| time_zone_transition_type |</span><br><span class="line">| user                      |</span><br><span class="line">+<span class="comment">---------------------------+</span></span><br><span class="line">24 rows in <span class="keyword">set</span> (<span class="number">0.03</span> sec)</span><br></pre></td></tr></table></figure>
<p>一共存在24个。<br>刚刚我们FROM某个库查看数据表，那当前数据库会不会发生改变吗？<br>我们再来验证一下：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; SELECT DATABASE();</span><br><span class="line">+<span class="comment">------------+</span></span><br><span class="line">| DATABASE() |</span><br><span class="line">+<span class="comment">------------+</span></span><br><span class="line">| test       |</span><br><span class="line">+<span class="comment">------------+</span></span><br><span class="line">1 row in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure>
<p>可以看出仍然是test数据库。</p>
<h2 id="6）查看数据表的结构"><a href="#6）查看数据表的结构" class="headerlink" title="6）查看数据表的结构"></a>6）查看数据表的结构</h2><p>刚刚已经验证数据表已经创建成功了，那么它的数据结构是我们所创建的吗？答案毋庸置疑，如果不放心，我们可以通过以下方式验证：<br>SHOW TABLES FROM tb1_name<br>此为查看数据表的列结构</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; SHOW COLUMNS FROM tb1;</span><br><span class="line">+<span class="comment">----------+---------------------+------+-----+---------+-------+</span></span><br><span class="line">| Field    | Type                | Null | Key | Default | Extra |</span><br><span class="line">+<span class="comment">----------+---------------------+------+-----+---------+-------+</span></span><br><span class="line">| username | varchar(20)         | YES  |     | NULL    |       |</span><br><span class="line">| age      | tinyint(3) unsigned | YES  |     | NULL    |       |</span><br><span class="line">| salary   | float(8,2) unsigned | YES  |     | NULL    |       |</span><br><span class="line">+<span class="comment">----------+---------------------+------+-----+---------+-------+</span></span><br><span class="line">3 rows in <span class="keyword">set</span> (<span class="number">0.01</span> sec)</span><br></pre></td></tr></table></figure>

<h2 id="7）插入记录"><a href="#7）插入记录" class="headerlink" title="7）插入记录"></a>7）插入记录</h2><p>既然数据表已经创建好啦，也就是列已经规定好，它可以有很多不固定的行（通过下面列子可以理解这里的行与列），行称之为记录，那么接下来我们写入记录。<br>INSERT [INTO] tb1_name [(col_name,…)] VALUES(val,…)<br>tbl_name 表的名字 省略[(col_name,…)]<br>INSERT 表名 VALUES （‘名字’，年龄，工资）；</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; INSERT tb1 VALUES('xiaoming',18,12342.21);</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br></pre></td></tr></table></figure>
<p>如果少输入一组数据会怎么样呢？</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; INSERT tb1 VALUES('xiaohua',12342.21);</span><br><span class="line">ERROR 1136 (21S01): Column count doesn't match value count at row 1</span><br></pre></td></tr></table></figure>
<p>INSERT [INTO] tbl_name [(列名1，列名2)]VALUES(赋值,赋值);给特需位置赋值</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; INSERT tb1 (username,salary)VALUES('xiaogou',321.12);</span><br><span class="line">Query OK, 1 row affected (0.03 sec)</span><br></pre></td></tr></table></figure>

<h2 id="8-查看记录"><a href="#8-查看记录" class="headerlink" title="8)查看记录"></a>8)查看记录</h2><p>SELECT expr,… FORM ta1_name<br>SELECT 真实的用法很复杂，这里简单的使用一下，后面会有系统的介绍。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; SELECT * FROM tb1;</span><br><span class="line">+<span class="comment">----------+------+----------+</span></span><br><span class="line">| username | age  | salary   |</span><br><span class="line">+<span class="comment">----------+------+----------+</span></span><br><span class="line">| xiaoming |   18 | 12342.21 |</span><br><span class="line">| xiaogou  | NULL |   321.12 |</span><br><span class="line">+<span class="comment">----------+------+----------+</span></span><br><span class="line">2 rows in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure>
<p>xiaogou的age我们没有设置，因此为NULL。</p>
<h2 id="9）空值与非空"><a href="#9）空值与非空" class="headerlink" title="9）空值与非空"></a>9）空值与非空</h2><p>我们在网站填写表格时，经常会遇到，此项必填的情况，那么在数据表中我们应该怎么设置呢？<br>设置字段(标签)的属性：空值与非空<br>NULL, 字段值可以为空<br>NOT NULL,字段值禁止为空<br>使用方式：<br>CREATE TABEL tb1(<br>    username VARCHAR(20) NOT NULL,<br>);<br>接下来我们再创建一个数据表，加入空值与非空的控制。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; CREATE TABLE tb2(</span><br><span class="line">    -&gt; name VARCHAR(20) NOT NULL,</span><br><span class="line">    -&gt; age TINYINT UNSIGNED NULL</span><br><span class="line">    -&gt; );</span><br><span class="line">Query OK, 0 rows affected (0.01 sec)</span><br></pre></td></tr></table></figure>

<p>验证一下：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; SHOW COLUMNS FROM tb2;</span><br><span class="line">+<span class="comment">-------+---------------------+------+-----+---------+-------+</span></span><br><span class="line">| Field | Type                | Null | Key | Default | Extra |</span><br><span class="line">+<span class="comment">-------+---------------------+------+-----+---------+-------+</span></span><br><span class="line">| name  | varchar(20)         | NO   |     | NULL    |       |</span><br><span class="line">| age   | tinyint(3) unsigned | YES  |     | NULL    |       |</span><br><span class="line">+<span class="comment">-------+---------------------+------+-----+---------+-------+</span></span><br><span class="line">2 rows in <span class="keyword">set</span> (<span class="number">0.04</span> sec)</span><br></pre></td></tr></table></figure>
<p>可以看到name的Null为NO，age的Null为YES<br>接下来，插入记录：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; INSERT tb2 VALUES('xiaohua',18);</span><br><span class="line">Query OK, 1 row affected (0.03 sec)</span><br></pre></td></tr></table></figure>
<p>当年龄为NULL时：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; INSERT tb2 VALUES('xiaoxiao',NULL);</span><br><span class="line">Query OK, 1 row affected (0.03 sec)</span><br></pre></td></tr></table></figure>
<p>当name为NULL时：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; INSERT tb2 VALUES(NULL,18);</span><br><span class="line">ERROR 1048 (23000): Column 'name' cannot be null</span><br></pre></td></tr></table></figure>
<p>出现错误，name不能为null。</p>
<h2 id="10）自动编号"><a href="#10）自动编号" class="headerlink" title="10）自动编号"></a>10）自动编号</h2><p>在记录时，我们需要保证记录的唯一性，即在数据表中这条记录不存在重复。此时我们可以通过添加AUTO_INCREAMENT属性来实现自动编号。<br>AUTO_INCREAMENT自动编号，且必须与主键组合使用；<br>默认情况下，起始值为1，每次的增量为1。</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; CREATE TABLE tb3(</span><br><span class="line">    -&gt; id SMALLINT UNSIGNED AUTO_INCREMENT,</span><br><span class="line">    -&gt; username VARCHAR(30) NOT NULL</span><br><span class="line">    -&gt; );</span><br><span class="line">ERROR 1075 (42000): Incorrect table definition; there can be only one auto column and it must be defined as a key</span><br></pre></td></tr></table></figure>

<p>出现错误there can be only one auto column and it must be defined as a key，所以我们必须要了解主键。</p>
<h2 id="11）主键-PRIMARY-KEY"><a href="#11）主键-PRIMARY-KEY" class="headerlink" title="11）主键 PRIMARY KEY"></a>11）主键 PRIMARY KEY</h2><p>主键约束<br>每张表只能存在一个主键<br>主键保证记录的唯一性<br>主键自动为NOT NULL<br>要注意AUTO_INCREAMENT必须与主键一起使用。</p>
<p>下面我们重新创建一个数据表：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; CREATE TABLE tb3(</span><br><span class="line">    -&gt; id SMALLINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,</span><br><span class="line">    -&gt; username VARCHAR(30) NOT NULL</span><br><span class="line">    -&gt; );</span><br><span class="line">Query OK, 0 rows affected (0.04 sec)</span><br></pre></td></tr></table></figure>
<p>查看一下这个数据表：</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; SHOW COLUMNS FROM tb3;</span><br><span class="line">+<span class="comment">----------+----------------------+------+-----+---------+----------------+</span></span><br><span class="line">| Field    | Type                 | Null | Key | Default | Extra          |</span><br><span class="line">+<span class="comment">----------+----------------------+------+-----+---------+----------------+</span></span><br><span class="line">| id       | smallint(5) unsigned | NO   | PRI | NULL    | auto_increment |</span><br><span class="line">| username | varchar(30)          | NO   |     | NULL    |                |</span><br><span class="line">+<span class="comment">----------+----------------------+------+-----+---------+----------------+</span></span><br><span class="line">2 rows in <span class="keyword">set</span> (<span class="number">0.04</span> sec)</span><br></pre></td></tr></table></figure>
<p>可以看到id自动为NO NULL。KEY为PRIMARY</p>
<p>插入多条记录</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; INSERT tb3(username) VALUES('hua');</span><br><span class="line">Query OK, 1 row affected (0.03 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; INSERT tb3(username) VALUES('hui');</span><br><span class="line">Query OK, 1 row affected (0.03 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; INSERT tb3(username) VALUES('hao');</span><br><span class="line">Query OK, 1 row affected (0.03 sec)</span><br></pre></td></tr></table></figure>
<p>因为我们是为部分值赋值，所以不能省略（username）</p>
<p>检查是否自动编号</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; SELECT * FROM tb3;</span><br><span class="line">+<span class="comment">----+----------+</span></span><br><span class="line">| id | username |</span><br><span class="line">+<span class="comment">----+----------+</span></span><br><span class="line">|  1 | hua      |</span><br><span class="line">|  2 | hui      |</span><br><span class="line">|  3 | hao      |</span><br><span class="line">+<span class="comment">----+----------+</span></span><br><span class="line">3 rows in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure>

<p>保证了记录的唯一性。</p>
<p>一开始我们提到AUTO_INCREAMENT必须与主键一起使用，那么主键是否必须与AUTO_INCREAMENT一起使用呢？下面验证一下吧！<br>再创建一个数据表</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; CREATE TABLE tb4(</span><br><span class="line">    -&gt; id SMALLINT PRIMARY KEY,</span><br><span class="line">    -&gt; username VARCHAR(20) NOT NULL</span><br><span class="line">    -&gt; );</span><br><span class="line">Query OK, 0 rows affected (0.03 sec)</span><br></pre></td></tr></table></figure>
<p>注意id没有加入自动编码。<br>插入几条记录</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; INSERT tb4 VALUES(1,'chun');</span><br><span class="line">Query OK, 1 row affected (0.03 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; INSERT tb4 VALUES(25,'xiao');</span><br><span class="line">Query OK, 1 row affected (0.03 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; INSERT tb4 VALUES(18,'yue');</span><br><span class="line">Query OK, 1 row affected (0.03 sec)</span><br></pre></td></tr></table></figure>
<p>查看记录</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; SELECT * FROM tb4;</span><br><span class="line">+<span class="comment">----+----------+</span></span><br><span class="line">| id | username |</span><br><span class="line">+<span class="comment">----+----------+</span></span><br><span class="line">|  1 | chun     |</span><br><span class="line">| 18 | yue      |</span><br><span class="line">| 25 | xiao     |</span><br><span class="line">+<span class="comment">----+----------+</span></span><br><span class="line">3 rows in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure>
<p>可以插入相同的id吗？</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; INSERT tb4 VALUES(18,'ye');</span><br><span class="line">ERROR 1062 (23000): Duplicate entry '18' for key 'PRIMARY'</span><br></pre></td></tr></table></figure>
<p>提示错误：不能多次插入18<br>因此AUTO_INCREAMENT必须与主键一起使用，主键可以不与AUTO_INCREAMENT一起使用。</p>
<h2 id="12）唯一约束-UNIQUE-KEY"><a href="#12）唯一约束-UNIQUE-KEY" class="headerlink" title="12）唯一约束 UNIQUE KEY"></a>12）唯一约束 UNIQUE KEY</h2><ol>
<li>另一个保证记录唯一性的方法：唯一约束。</li>
<li>唯一约束可以保证记录的唯一性</li>
<li>唯一约束的字段可以为空值（NULL）</li>
<li>每张数据表可以存在多个唯一约束</li>
</ol>
<p>下面创建一个既有主键约束又有唯一约束的数据表</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; CREATE TABLE tb5(</span><br><span class="line">    -&gt; id SMALLINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,</span><br><span class="line">    -&gt; username VARCHAR(20) NOT NULL UNIQUE KEY,</span><br><span class="line">    -&gt; age TINYINT UNSIGNED</span><br><span class="line">    -&gt; );</span><br><span class="line">Query OK, 0 rows affected (0.04 sec)</span><br></pre></td></tr></table></figure>
<p>查看数据表结构</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; SHOW COLUMNS FROM tb5;</span><br><span class="line">+<span class="comment">----------+----------------------+------+-----+---------+----------------+</span></span><br><span class="line">| Field    | Type                 | Null | Key | Default | Extra          |</span><br><span class="line">+<span class="comment">----------+----------------------+------+-----+---------+----------------+</span></span><br><span class="line">| id       | smallint(5) unsigned | NO   | PRI | NULL    | auto_increment |</span><br><span class="line">| username | varchar(20)          | NO   | UNI | NULL    |                |</span><br><span class="line">| age      | tinyint(3) unsigned  | YES  |     | NULL    |                |</span><br><span class="line">+<span class="comment">----------+----------------------+------+-----+---------+----------------+</span></span><br><span class="line">3 rows in <span class="keyword">set</span> (<span class="number">0.04</span> sec)</span><br></pre></td></tr></table></figure>
<p>id为主键约束，username为唯一约束。<br>添加记录</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; INSERT tb5(username,age) VALUES('hua',18);</span><br><span class="line">Query OK, 1 row affected (0.03 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; INSERT tb5(username,age) VALUES('hua',18);</span><br><span class="line">ERROR 1062 (23000): Duplicate entry 'hua' for key 'username'</span><br><span class="line"></span><br><span class="line">mysql&gt; INSERT tb5(username,age) VALUES('hao',18);</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br></pre></td></tr></table></figure>
<p>当插入第二个‘hua’时，出现错误提示，这就是唯一约束。</p>
<h2 id="13）默认约束-DEFAULT"><a href="#13）默认约束-DEFAULT" class="headerlink" title="13）默认约束 DEFAULT"></a>13）默认约束 DEFAULT</h2><p>当插入记录时，如果没有明确为字段赋值，则自动赋予默认值。<br>首先还是创建一个数据表</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; CREATE TABLE tb6(</span><br><span class="line">    -&gt; id SMALLINT UNSIGNED AUTO_INCREMENT PRIMARY KEY,</span><br><span class="line">    -&gt; username VARCHAR(20) NOT NULL UNIQUE KEY,</span><br><span class="line">    -&gt; sex ENUM('1','2','3') DEFAULT '3'</span><br><span class="line">    -&gt; );</span><br><span class="line">Query OK, 0 rows affected (0.04 sec)</span><br></pre></td></tr></table></figure>
<p>再查看一下结构</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; SHOW COLUMNS FROM tb6;</span><br><span class="line">+<span class="comment">----------+----------------------+------+-----+---------+----------------+</span></span><br><span class="line">| Field    | Type                 | Null | Key | Default | Extra          |</span><br><span class="line">+<span class="comment">----------+----------------------+------+-----+---------+----------------+</span></span><br><span class="line">| id       | smallint(5) unsigned | NO   | PRI | NULL    | auto_increment |</span><br><span class="line">| username | varchar(20)          | NO   | UNI | NULL    |                |</span><br><span class="line">| sex      | enum('1','2','3')    | YES  |     | 3       |                |</span><br><span class="line">+<span class="comment">----------+----------------------+------+-----+---------+----------------+</span></span><br><span class="line">3 rows in <span class="keyword">set</span> (<span class="number">0.04</span> sec)</span><br></pre></td></tr></table></figure>

<p>sex（性别）可以为NULL，‘1’表示男，‘2’表示女，‘3’表示保密。（不要想歪）<br>加入一条记录</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; INSERT tb6 (username) VALUES ('hui');</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br></pre></td></tr></table></figure>
<p>查看一下记录</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; SELECT * FROM tb6;</span><br><span class="line">+<span class="comment">----+----------+------+</span></span><br><span class="line">| id | username | sex  |</span><br><span class="line">+<span class="comment">----+----------+------+</span></span><br><span class="line">|  1 | hui      | 3    |</span><br><span class="line">+<span class="comment">----+----------+------+</span></span><br><span class="line">1 row in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure>
<p>sex在不赋值的情况下，默认为3。</p>
<h1 id="小结："><a href="#小结：" class="headerlink" title="小结："></a>小结：</h1><p><strong>数据类型</strong><br>整型：tinyint； smallint； int<br>字符型：varchar(); char()<br>浮点型：float(m,n); double(m,n)<br>日期时间型<br><strong>数据表操作</strong><br>创建表create table tablename，<br>查看数据库中的表show tables from dataname，<br>查看表的属性字段show columus from tablename，<br>插入记录insert tablename (字段) values (值)，<br>查询表的记录select  * from tablename<br><strong>字段属性</strong><br>主键：主键的记录是唯一的，不能为空。一张表中只能有一个字段是主键。aout_increment:自动编号，从1开始，每次增加1，只能是主键。<br>唯一约束：记录的值是唯一的，可以为空。一张表中可以有多个字段是唯一约束。<br>默认约束：当插入记录时，没有明确为字段赋值时，则自动赋默认值。</p>
]]></content>
      <categories>
        <category>数据库</category>
      </categories>
      <tags>
        <tag>MySQL</tag>
        <tag>数据库</tag>
      </tags>
  </entry>
  <entry>
    <title>第一章 初识数据库</title>
    <url>/2019/12/13/%E7%AC%AC%E4%B8%80%E7%AB%A0%E5%88%9D%E8%AF%86%E6%95%B0%E6%8D%AE%E5%BA%93/</url>
    <content><![CDATA[<p>   本章节我们将初步的了解数据库，学习如何启动关闭服务器以及创建数据库的过程。</p>
<a id="more"></a> 
<h1 id="1-连接本地服务器"><a href="#1-连接本地服务器" class="headerlink" title="1.连接本地服务器"></a>1.连接本地服务器</h1><p>注意大小写： 密码是 -P       端口号是 -p<br>清屏：cls<br>mysql -V    (version)   –输出版本信息并且退出<br>mysql -u(用户名)root   -p（密码） -P(端口号) 3306   -h(服务器名称)172.0.0.1</p>
<h3 id="启动服务器"><a href="#启动服务器" class="headerlink" title="启动服务器"></a>启动服务器</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">C:\Windows\system32&gt;net start mysql</span><br><span class="line">MySQL 服务正在启动 .</span><br><span class="line">MySQL 服务已经启动成功。</span><br></pre></td></tr></table></figure>
<h3 id="再连接到本地服务器"><a href="#再连接到本地服务器" class="headerlink" title="再连接到本地服务器"></a>再连接到本地服务器</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">C:\Windows\system32&gt;mysql -uroot -p -P3306 -h127.0.0.1</span><br><span class="line">Enter password: ****</span><br><span class="line">Welcome to the MySQL monitor.  Commands <span class="keyword">end</span> <span class="keyword">with</span> ; or \g.</span><br><span class="line">Your MySQL connection id is 1</span><br><span class="line">Server version: 5.5.62 MySQL Community Server (GPL)</span><br><span class="line"></span><br><span class="line">Copyright (c) 2000, 2018, Oracle and/or its affiliates. All rights reserved.</span><br><span class="line"></span><br><span class="line">Oracle is a registered trademark of Oracle Corporation and/or its</span><br><span class="line">affiliates. Other names may be trademarks of their respective</span><br><span class="line">owners.</span><br><span class="line"></span><br><span class="line">Type '<span class="keyword">help</span>;' or '\h' for help. <span class="keyword">Type</span> <span class="string">'\c'</span> <span class="keyword">to</span> <span class="keyword">clear</span> the <span class="keyword">current</span> <span class="keyword">input</span> statement.</span><br></pre></td></tr></table></figure>
<p>其中-u后面跟的是你的用户名，输入密码后即连接。当为连接本地服务器时，<br>-P与-h可以省略。</p>
<h3 id="退出连接"><a href="#退出连接" class="headerlink" title="退出连接"></a>退出连接</h3><p>MySQL的退出：<br>mysql &gt; exit;<br>mysql &gt; quit;<br>mysql &gt; \q</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">mysql&gt; exit</span><br><span class="line">Bye</span><br></pre></td></tr></table></figure>
<h3 id="关闭服务器"><a href="#关闭服务器" class="headerlink" title="关闭服务器"></a>关闭服务器</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">C:\Windows\system32&gt;net stop mysql</span><br><span class="line">MySQL 服务正在停止.</span><br><span class="line">MySQL 服务已成功停止。</span><br></pre></td></tr></table></figure>
<p>CMD命令 ： cls清屏。</p>
<h1 id="2-修改提示符"><a href="#2-修改提示符" class="headerlink" title="2.修改提示符"></a>2.修改提示符</h1><p>MySQL提示符：<br>参数　　　　　　　　　　　　描述<br>＼Ｄ　　　　　　　　　　　　完整的日期<br>＼ｄ　　　　　　　　　　　　当前数据库<br>＼ｈ　　　　　　　　　　　　服务器名称<br>＼ｕ　　　　　　　　　　　　当前用户</p>
<p>修改mysql提示符有两种方式：<br>1）在连接客户端时使用：mysql -uroot -p –prompt \h      /<em>\h是表示以服务器名作为提示符</em>/<br>2）在连接客户端后使用：mysql prompt mysql&gt;         /<em>又会变为“mysql&gt;”为提示符</em>/</p>
<h3 id="开启服务后，我们可以在连接客户端时就行修改提示符："><a href="#开启服务后，我们可以在连接客户端时就行修改提示符：" class="headerlink" title="开启服务后，我们可以在连接客户端时就行修改提示符："></a>开启服务后，我们可以在连接客户端时就行修改提示符：</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">C:\Windows\system32&gt;mysql -uroot -proot --prompt \u</span><br><span class="line">Welcome to the MySQL monitor.  Commands <span class="keyword">end</span> <span class="keyword">with</span> ; or \g.</span><br><span class="line">Your MySQL connection id is 2</span><br><span class="line">Server version: 5.5.62 MySQL Community Server (GPL)</span><br><span class="line"></span><br><span class="line">Copyright (c) 2000, 2018, Oracle and/or its affiliates. All rights reserved.</span><br><span class="line"></span><br><span class="line">Oracle is a registered trademark of Oracle Corporation and/or its</span><br><span class="line">affiliates. Other names may be trademarks of their respective</span><br><span class="line">owners.</span><br><span class="line"></span><br><span class="line">Type '<span class="keyword">help</span>;' or '\h' for help. <span class="keyword">Type</span> <span class="string">'\c'</span> <span class="keyword">to</span> <span class="keyword">clear</span> the <span class="keyword">current</span> <span class="keyword">input</span> statement.</span><br><span class="line"></span><br><span class="line">root</span><br></pre></td></tr></table></figure>
<p>修改为了root</p>
<h3 id="连接客户端以后可以更改："><a href="#连接客户端以后可以更改：" class="headerlink" title="连接客户端以后可以更改："></a>连接客户端以后可以更改：</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">root prompt \u &gt;</span><br><span class="line">PROMPT <span class="keyword">set</span> <span class="keyword">to</span> <span class="string">'\u &gt;'</span></span><br><span class="line">root &gt;</span><br></pre></td></tr></table></figure>
<p>设置为了root &gt;</p>
<h1 id="3-常用命令及语法规则"><a href="#3-常用命令及语法规则" class="headerlink" title="3.常用命令及语法规则"></a>3.常用命令及语法规则</h1><h3 id="常用的命令："><a href="#常用的命令：" class="headerlink" title="常用的命令："></a>常用的命令：</h3><p>1) SELECT VERSION（）;显示当前版本<br>2) SELECT NOW（）;显示当前日期<br>3) SELECT USER（）;显示当前用户</p>
<h3 id="语句的规范："><a href="#语句的规范：" class="headerlink" title="语句的规范："></a>语句的规范：</h3><p>1) 关键字和函数名全部大写;<br>2) 数据库名和表名、字段全部小写;<br>3) 必须以分号结尾;</p>
<h3 id="查看版本"><a href="#查看版本" class="headerlink" title="查看版本"></a>查看版本</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">root &gt;SELECT VERSION();</span><br><span class="line">+<span class="comment">-----------+</span></span><br><span class="line">| VERSION() |</span><br><span class="line">+<span class="comment">-----------+</span></span><br><span class="line">| 5.5.62    |</span><br><span class="line">+<span class="comment">-----------+</span></span><br><span class="line">1 row in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure>
<h3 id="不加分号结尾"><a href="#不加分号结尾" class="headerlink" title="不加分号结尾"></a>不加分号结尾</h3><figure class="highlight"><table><tr><td class="code"><pre><span class="line">root &gt;SELECT VERSION()</span><br><span class="line">    -&gt;</span><br><span class="line">    -&gt;</span><br><span class="line">    -&gt;</span><br><span class="line">    -&gt;</span><br></pre></td></tr></table></figure>

<h3 id="如果使用小写："><a href="#如果使用小写：" class="headerlink" title="如果使用小写："></a>如果使用小写：</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">root &gt;select version();</span><br><span class="line">+<span class="comment">-----------+</span></span><br><span class="line">| version() |</span><br><span class="line">+<span class="comment">-----------+</span></span><br><span class="line">| 5.5.62    |</span><br><span class="line">+<span class="comment">-----------+</span></span><br><span class="line">1 row in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure>
<p>也可以通过，只是我们一般默认大写。</p>
<h1 id="4-操作数据库"><a href="#4-操作数据库" class="headerlink" title="4.操作数据库"></a>4.操作数据库</h1><h2 id="1）创建数据库"><a href="#1）创建数据库" class="headerlink" title="1）创建数据库"></a>1）创建数据库</h2><p>CREATE ｛DATABASE | SCHEMA｝[IF NOT EXITS]  db_name</p>
<p><strong>说明：</strong><br>{A|B}：A和B选一个；<br>[ A ]: 可加也可不加；</p>
<h3 id="创建一个t1数据库"><a href="#创建一个t1数据库" class="headerlink" title="创建一个t1数据库"></a>创建一个t1数据库</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">root &gt;CREATE DATABASE t1;</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br></pre></td></tr></table></figure>
<h3 id="再创建一个t1数据库"><a href="#再创建一个t1数据库" class="headerlink" title="再创建一个t1数据库"></a>再创建一个t1数据库</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">root &gt;CREATE DATABASE t1;</span><br><span class="line">ERROR 1007 (HY000): Can't <span class="keyword">create</span> <span class="keyword">database</span> <span class="string">'t1'</span>; database exists</span><br></pre></td></tr></table></figure>
<p>就会产生错误<br>如果加上IF NOT EXISTS</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">root &gt;CREATE DATABASE IF NOT EXISTS t1;</span><br><span class="line">Query OK, 1 row affected, 1 warning (0.00 sec)</span><br></pre></td></tr></table></figure>
<p>就不会报错，只有一个警告。<br>下面我们查看警告信息</p>
<figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">root &gt;SHOW WARNINGS;</span><br><span class="line">+<span class="comment">-------+------+---------------------------------------------+</span></span><br><span class="line">| Level | Code | Message                                     |</span><br><span class="line">+<span class="comment">-------+------+---------------------------------------------+</span></span><br><span class="line">| Note  | 1007 | Can't <span class="keyword">create</span> <span class="keyword">database</span> <span class="string">'t1'</span>; database exists |</span><br><span class="line">+<span class="comment">-------+------+---------------------------------------------+</span></span><br><span class="line">1 row in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure>
<p>可以看出t1数据库已经存在，不能创建。</p>
<h2 id="2）设置编码格式"><a href="#2）设置编码格式" class="headerlink" title="2）设置编码格式"></a>2）设置编码格式</h2><p>[DEFAULT]  CHARACTE SET [=] charset_name<br>刚刚在创建数据库t1时，我们并没有设置其编码格式，因此为默认的编码（utf8）下面进行验证：</p>
<h3 id="查看编码格式"><a href="#查看编码格式" class="headerlink" title="查看编码格式"></a>查看编码格式</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">root &gt;SHOW CREATE DATABASE t1;</span><br><span class="line">+<span class="comment">----------+-------------------------------------------------------------+</span></span><br><span class="line">| Database | <span class="keyword">Create</span> <span class="keyword">Database</span>                                             |</span><br><span class="line">+<span class="comment">----------+-------------------------------------------------------------+</span></span><br><span class="line">| t1       | <span class="keyword">CREATE</span> <span class="keyword">DATABASE</span> <span class="string">`t1`</span> <span class="comment">/*!40100 DEFAULT CHARACTER SET utf8 */</span> |</span><br><span class="line">+<span class="comment">----------+-------------------------------------------------------------+</span></span><br><span class="line"><span class="number">1</span> <span class="keyword">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure>

<h3 id="创建其它编码的数据库"><a href="#创建其它编码的数据库" class="headerlink" title="创建其它编码的数据库"></a>创建其它编码的数据库</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">root &gt;CREATE DATABASE IF NOT EXISTS t2 CHARACTER SET gbk;</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">root &gt;SHOW CREATE DATABASE t2;</span><br><span class="line">+<span class="comment">----------+------------------------------------------------------------+</span></span><br><span class="line">| Database | <span class="keyword">Create</span> <span class="keyword">Database</span>                                            |</span><br><span class="line">+<span class="comment">----------+------------------------------------------------------------+</span></span><br><span class="line">| t2       | <span class="keyword">CREATE</span> <span class="keyword">DATABASE</span> <span class="string">`t2`</span> <span class="comment">/*!40100 DEFAULT CHARACTER SET gbk */</span> |</span><br><span class="line">+<span class="comment">----------+------------------------------------------------------------+</span></span><br><span class="line"><span class="number">1</span> <span class="keyword">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure>
<p>当我们又想要更改数据库t2的编码格式时，如果使用删掉再重新创建的方式，无疑浪费我们的时间，因此我们使用如下方式：<br>ALERT ｛DATABASE | SCHEMA｝[db_name]<br>[DEFAULT] CHARACTE SET [=]charset_name</p>
<h3 id="改变编码格式"><a href="#改变编码格式" class="headerlink" title="改变编码格式"></a>改变编码格式</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">root &gt;ALTER DATABASE t2 CHARACTER SET utf8;</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">root &gt;SHOW CREATE DATABASE t2;</span><br><span class="line">+<span class="comment">----------+-------------------------------------------------------------+</span></span><br><span class="line">| Database | <span class="keyword">Create</span> <span class="keyword">Database</span>                                             |</span><br><span class="line">+<span class="comment">----------+-------------------------------------------------------------+</span></span><br><span class="line">| t2       | <span class="keyword">CREATE</span> <span class="keyword">DATABASE</span> <span class="string">`t2`</span> <span class="comment">/*!40100 DEFAULT CHARACTER SET utf8 */</span> |</span><br><span class="line">+<span class="comment">----------+-------------------------------------------------------------+</span></span><br><span class="line"><span class="number">1</span> <span class="keyword">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure>

<h2 id="3-查看当前服务器下的数据库"><a href="#3-查看当前服务器下的数据库" class="headerlink" title="3)查看当前服务器下的数据库"></a>3)查看当前服务器下的数据库</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SHOW</span> ｛<span class="keyword">DATABASES</span> | SCHEMAS｝</span><br><span class="line">root &gt;<span class="keyword">SHOW</span> <span class="keyword">DATABASES</span>;</span><br><span class="line">+<span class="comment">--------------------+</span></span><br><span class="line">| Database           |</span><br><span class="line">+<span class="comment">--------------------+</span></span><br><span class="line">| information_schema |</span><br><span class="line">| mysql              |</span><br><span class="line">| performance_schema |</span><br><span class="line">| t1                 |</span><br><span class="line">| t2                 |</span><br><span class="line">| test               |</span><br><span class="line">+<span class="comment">--------------------+</span></span><br><span class="line">6 rows in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure>
<p>可以看到t1，t2 已经被加入进去，而且里面还有MySQL自带的四个数据库。</p>
<h2 id="4-删除数据库"><a href="#4-删除数据库" class="headerlink" title="4)删除数据库"></a>4)删除数据库</h2><p>DORP ｛DATABASE | SCHEMA｝[IF EXISTS] db_name;</p>
<h3 id="删除t2数据库"><a href="#删除t2数据库" class="headerlink" title="删除t2数据库"></a>删除t2数据库</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">root &gt;DROP DATABASE IF EXISTS t2;</span><br><span class="line">Query OK, 0 rows affected (0.02 sec)</span><br></pre></td></tr></table></figure>
<h3 id="再次查看数据库"><a href="#再次查看数据库" class="headerlink" title="再次查看数据库"></a>再次查看数据库</h3><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">root &gt;SHOW DATABASES;</span><br><span class="line">+<span class="comment">--------------------+</span></span><br><span class="line">| Database           |</span><br><span class="line">+<span class="comment">--------------------+</span></span><br><span class="line">| information_schema |</span><br><span class="line">| mysql              |</span><br><span class="line">| performance_schema |</span><br><span class="line">| t1                 |</span><br><span class="line">| test               |</span><br><span class="line">+<span class="comment">--------------------+</span></span><br><span class="line">5 rows in <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure>
<p> 可以看出t2已经被删除</p>
<h1 id="小结："><a href="#小结：" class="headerlink" title="小结："></a>小结：</h1><p><strong>MySQL默认端口号</strong>：3306<br><strong>MySQL中的超级用户</strong>：root</p>
<p><strong>SQL 中最重要的 DDL 语句:</strong><br>CREATE DATABASE - 创建新数据库<br>ALTER DATABASE - 修改数据库<br>DROP DATABASE - 删除数据库<br>（尚未用到）<br>CREATE TABLE - 创建新表<br>ALTER TABLE - 变更（改变）数据库表<br>DROP TABLE - 删除表<br>CREATE INDEX - 创建索引（搜索键）<br>DROP INDEX - 删除索引</p>
]]></content>
      <categories>
        <category>数据库</category>
      </categories>
      <tags>
        <tag>MySQL</tag>
        <tag>数据库</tag>
      </tags>
  </entry>
  <entry>
    <title>选择排序</title>
    <url>/2019/12/11/JavaAlgsSelectionSort/</url>
    <content><![CDATA[<p>Welcome to my Blog! If you get any problems when looking after my Blog, you can contact me on <a href="https://github.com/Qu-jq/Qu-jq.github.io" target="_blank" rel="noopener">GitHub</a>.</p>
<p>##选择排序算法</p>
<h3 id="算法描述"><a href="#算法描述" class="headerlink" title="算法描述"></a>算法描述</h3><ol>
<li><p>假设数组第一个数为最小</p>
</li>
<li><p>查找整个数组，看是否有比这个数更小的，<br>如果有，则互相调换数据，循坏过后，找到的数据即为整个数组最小的数</p>
</li>
<li><p>再假设第二个数据为最小的，此时从第二个数据开始查找最小的数</p>
</li>
<li><p>依次循环</p>
<a id="more"></a> 
<h4 id="核心思想："><a href="#核心思想：" class="headerlink" title="核心思想："></a>核心思想：</h4><p>先找到n个元素中最小的数，再找n-1个元素中最小的数，依次往下……</p>
</li>
</ol>
<p>时间复杂度为O(n^2)</p>
<h3 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SelectionSort</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/*</span></span><br><span class="line"><span class="comment">	 * 从小到大排序</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">selectionSort</span><span class="params">(<span class="keyword">int</span>[] Arr)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">int</span> flush;<span class="comment">//中间缓存数据</span></span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;Arr.length-<span class="number">1</span>;i++) &#123;</span><br><span class="line">			<span class="keyword">int</span> minIndex = i ;<span class="comment">//最小数的索引</span></span><br><span class="line">			<span class="keyword">for</span>(<span class="keyword">int</span> j=i+<span class="number">1</span>; j&lt;Arr.length; j++) &#123;</span><br><span class="line">				<span class="keyword">if</span>(Arr[j]&lt;=Arr[minIndex]) &#123;</span><br><span class="line">					minIndex = j;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="comment">//如果有比Arr[minIndex]更小的数，互相替换</span></span><br><span class="line">			<span class="keyword">if</span>(minIndex != i) &#123;</span><br><span class="line">				flush = Arr[minIndex];</span><br><span class="line">				Arr[minIndex] = Arr[i];</span><br><span class="line">				Arr[i] = flush;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//测试</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">int</span>[] Arr = &#123;<span class="number">4</span>,<span class="number">3</span>,<span class="number">2</span>,<span class="number">5</span>,<span class="number">67</span>,<span class="number">342</span>,<span class="number">23</span>,<span class="number">234</span>,<span class="number">65</span>,<span class="number">3</span>&#125;;</span><br><span class="line">		selectionSort(Arr) ;</span><br><span class="line">		System.out.println(Arrays.toString(Arr));<span class="comment">//[2, 3, 3, 4, 5, 23, 65, 67, 234, 342]</span></span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>算法</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>算法</tag>
      </tags>
  </entry>
  <entry>
    <title>快速排序</title>
    <url>/2019/12/11/JavaAlgsQuickSort/</url>
    <content><![CDATA[<p>Welcome to my Blog! This is my very first post. If you get any problems when looking after my Blog, you can contact me on <a href="https://github.com/Qu-jq/Qu-jq.github.io" target="_blank" rel="noopener">GitHub</a>.</p>
<h3 id="算法的描述"><a href="#算法的描述" class="headerlink" title="算法的描述"></a>算法的描述</h3><h4 id="快速排序-—分而治之的思想"><a href="#快速排序-—分而治之的思想" class="headerlink" title="快速排序    —分而治之的思想"></a>快速排序    —分而治之的思想</h4><ol>
<li><p>以第一个元素为基准pivot，小于基准的在数组左边left，大于的在数组右边right，分成两个部分left–pivot–right ,这样就找到pivot所在位置；</p>
</li>
<li><p>再对上一步得到的两个区间分别使用第一步；</p>
</li>
<li><p>知道划分到只剩一个元素为止，此时排序也就结束。</p>
<a id="more"></a> 
<h4 id="核心思想："><a href="#核心思想：" class="headerlink" title="核心思想："></a>核心思想：</h4></li>
</ol>
<p>每划分一个确定一次元素的位置，一共需要划分logn次，而确定位置需要n个操作,<br>所以算法的复杂度为O(nlogn)</p>
<h3 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">QuickSort</span> </span>&#123;</span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 快速排序API</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> Arr</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span>[] quikSort(<span class="keyword">int</span>[] Arr) &#123;</span><br><span class="line">		doSort(Arr,<span class="number">0</span>,Arr.length-<span class="number">1</span>);</span><br><span class="line">		<span class="keyword">return</span> Arr;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 递归调用自身，不断划分  ----分而治之</span></span><br><span class="line"><span class="comment">	 * 每划分一次，确定一个元素的位置</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> Arr</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> start</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> end</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">doSort</span><span class="params">(<span class="keyword">int</span>[] Arr,<span class="keyword">int</span> start,<span class="keyword">int</span> end)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">if</span> (start &lt; end) &#123;</span><br><span class="line">			<span class="keyword">int</span> correctIndex = partition(Arr, start, end);<span class="comment">//每次调用次函数，就将索引correctIndex上放置正确的数据</span></span><br><span class="line">			doSort(Arr, start, correctIndex - <span class="number">1</span>);</span><br><span class="line">			doSort(Arr, correctIndex+<span class="number">1</span>, end);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 找到基准数所在的正确位置</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> Arr</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> start</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> end</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">partition</span><span class="params">(<span class="keyword">int</span>[] Arr,<span class="keyword">int</span> start,<span class="keyword">int</span> end)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">int</span> pivot = Arr[start];<span class="comment">//取第一个数为基准</span></span><br><span class="line">		<span class="keyword">int</span> pivotIndex = start;</span><br><span class="line">		<span class="keyword">while</span>(start&lt;end) &#123;</span><br><span class="line">			<span class="comment">//start和end移动的顺序不能改变，如果反过来，就会把大于基准数的数交换到第一个数的位置</span></span><br><span class="line">			<span class="keyword">while</span>(Arr[end]&gt;=pivot &amp;&amp; end&gt;start) &#123;</span><br><span class="line">				end--;<span class="comment">//当满足右边的数大于基准的数时，指针往左偏移</span></span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">while</span>(Arr[start]&lt;=pivot &amp;&amp; end&gt;start) &#123;</span><br><span class="line">				start++;<span class="comment">//当满足左边的数小于基准的数时，指针往左偏移</span></span><br><span class="line">			&#125;</span><br><span class="line">			<span class="comment">//将不满足左右两边的大小的数据交换位置</span></span><br><span class="line">			swap(Arr,start, end);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="comment">//start=end时，将start或者end处的数据与基准处的数据交换，这样就得到基准数据的正确位置</span></span><br><span class="line">		swap(Arr,start, pivotIndex);</span><br><span class="line">		<span class="keyword">return</span> start;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 数据交换</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> Arr</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> idx</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@param</span> idy</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="function"><span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">swap</span><span class="params">(<span class="keyword">int</span>[] Arr, <span class="keyword">int</span> idx, <span class="keyword">int</span> idy)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">int</span> swap = Arr[idx];</span><br><span class="line">		Arr[idx] = Arr[idy];</span><br><span class="line">		Arr[idy] = swap;</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//测试</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">		<span class="keyword">int</span>[] Arr = &#123;<span class="number">3</span>, <span class="number">4</span>, <span class="number">1</span>, <span class="number">32</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">5</span>, <span class="number">12</span>, <span class="number">2</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>, <span class="number">2</span>, <span class="number">44</span>, <span class="number">111</span>, <span class="number">5</span>&#125;;</span><br><span class="line"></span><br><span class="line">		QuickSort quickSort = <span class="keyword">new</span> QuickSort();</span><br><span class="line">		<span class="keyword">int</span>[] sortedArr = quickSort.quikSort(Arr);</span><br><span class="line">		System.out.println(Arrays.toString(sortedArr));</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>算法</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>算法</tag>
      </tags>
  </entry>
</search>
